{"ast":null,"code":"import { useCallback, useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\nfunction getMargins(element) {\n  var styles = window.getComputedStyle(element);\n  var top = parseFloat(styles.marginTop) || 0;\n  var right = parseFloat(styles.marginRight) || 0;\n  var bottom = parseFloat(styles.marginBottom) || 0;\n  var left = parseFloat(styles.marginLeft) || 0;\n  return {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left\n  };\n}\n\nexport default function usePopperMarginModifiers() {\n  var overlayRef = useRef(null);\n  var margins = useRef(null);\n  var arrowMargins = useRef(null);\n  var popoverClass = useBootstrapPrefix(undefined, 'popover');\n  var dropdownMenuClass = useBootstrapPrefix(undefined, 'dropdown-menu');\n  var callback = useCallback(function (overlay) {\n    if (!overlay || !(hasClass(overlay, popoverClass) || hasClass(overlay, dropdownMenuClass))) return;\n    margins.current = getMargins(overlay);\n    overlay.style.margin = '0';\n    overlayRef.current = overlay;\n  }, [popoverClass, dropdownMenuClass]);\n  var offset = useMemo(function () {\n    return {\n      name: 'offset',\n      options: {\n        offset: function offset(_ref) {\n          var placement = _ref.placement;\n          if (!margins.current) return [0, 0];\n          var _margins$current = margins.current,\n              top = _margins$current.top,\n              left = _margins$current.left,\n              bottom = _margins$current.bottom,\n              right = _margins$current.right;\n\n          switch (placement.split('-')[0]) {\n            case 'top':\n              return [0, bottom];\n\n            case 'left':\n              return [0, right];\n\n            case 'bottom':\n              return [0, top];\n\n            case 'right':\n              return [0, left];\n\n            default:\n              return [0, 0];\n          }\n        }\n      }\n    };\n  }, [margins]);\n  var arrow = useMemo(function () {\n    return {\n      name: 'arrow',\n      options: {\n        padding: function padding() {\n          // The options here are used for Popper 2.8.4 and up.\n          // For earlier version, padding is handled in popoverArrowMargins below.\n          if (!arrowMargins.current) {\n            return 0;\n          }\n\n          var _arrowMargins$current = arrowMargins.current,\n              top = _arrowMargins$current.top,\n              right = _arrowMargins$current.right;\n          var padding = top || right;\n          return {\n            top: padding,\n            left: padding,\n            right: padding,\n            bottom: padding\n          };\n        }\n      }\n    };\n  }, [arrowMargins]); // Converts popover arrow margin to arrow modifier padding\n\n  var popoverArrowMargins = useMemo(function () {\n    return {\n      name: 'popoverArrowMargins',\n      enabled: true,\n      phase: 'main',\n      fn: function fn() {\n        return undefined;\n      },\n      requiresIfExists: ['arrow'],\n      effect: function effect(_ref2) {\n        var state = _ref2.state;\n\n        if (!overlayRef.current || !state.elements.arrow || !hasClass(overlayRef.current, popoverClass)) {\n          return undefined;\n        }\n\n        if (state.modifiersData['arrow#persistent']) {\n          // @popperjs/core <= 2.8.3 uses arrow#persistent to pass padding to arrow modifier.\n          var _getMargins = getMargins(state.elements.arrow),\n              top = _getMargins.top,\n              right = _getMargins.right;\n\n          var padding = top || right;\n          state.modifiersData['arrow#persistent'].padding = {\n            top: padding,\n            left: padding,\n            right: padding,\n            bottom: padding\n          };\n        } else {\n          // @popperjs/core >= 2.8.4 gets the padding from the arrow modifier options,\n          // so we'll get the margins here, and let the arrow modifier above pass\n          // it to popper.\n          arrowMargins.current = getMargins(state.elements.arrow);\n        }\n\n        state.elements.arrow.style.margin = '0';\n        return function () {\n          if (state.elements.arrow) state.elements.arrow.style.margin = '';\n        };\n      }\n    };\n  }, [popoverClass]);\n  return [callback, [offset, arrow, popoverArrowMargins]];\n}","map":{"version":3,"sources":["/Users/brendanglancy/Desktop/dev-port/node_modules/react-bootstrap/esm/usePopperMarginModifiers.js"],"names":["useCallback","useMemo","useRef","hasClass","useBootstrapPrefix","getMargins","element","styles","window","getComputedStyle","top","parseFloat","marginTop","right","marginRight","bottom","marginBottom","left","marginLeft","usePopperMarginModifiers","overlayRef","margins","arrowMargins","popoverClass","undefined","dropdownMenuClass","callback","overlay","current","style","margin","offset","name","options","_ref","placement","_margins$current","split","arrow","padding","_arrowMargins$current","popoverArrowMargins","enabled","phase","fn","requiresIfExists","effect","_ref2","state","elements","modifiersData","_getMargins"],"mappings":"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","sourcesContent":["import { useCallback, useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\nfunction getMargins(element) {\n  var styles = window.getComputedStyle(element);\n  var top = parseFloat(styles.marginTop) || 0;\n  var right = parseFloat(styles.marginRight) || 0;\n  var bottom = parseFloat(styles.marginBottom) || 0;\n  var left = parseFloat(styles.marginLeft) || 0;\n  return {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left\n  };\n}\n\nexport default function usePopperMarginModifiers() {\n  var overlayRef = useRef(null);\n  var margins = useRef(null);\n  var arrowMargins = useRef(null);\n  var popoverClass = useBootstrapPrefix(undefined, 'popover');\n  var dropdownMenuClass = useBootstrapPrefix(undefined, 'dropdown-menu');\n  var callback = useCallback(function (overlay) {\n    if (!overlay || !(hasClass(overlay, popoverClass) || hasClass(overlay, dropdownMenuClass))) return;\n    margins.current = getMargins(overlay);\n    overlay.style.margin = '0';\n    overlayRef.current = overlay;\n  }, [popoverClass, dropdownMenuClass]);\n  var offset = useMemo(function () {\n    return {\n      name: 'offset',\n      options: {\n        offset: function offset(_ref) {\n          var placement = _ref.placement;\n          if (!margins.current) return [0, 0];\n          var _margins$current = margins.current,\n              top = _margins$current.top,\n              left = _margins$current.left,\n              bottom = _margins$current.bottom,\n              right = _margins$current.right;\n\n          switch (placement.split('-')[0]) {\n            case 'top':\n              return [0, bottom];\n\n            case 'left':\n              return [0, right];\n\n            case 'bottom':\n              return [0, top];\n\n            case 'right':\n              return [0, left];\n\n            default:\n              return [0, 0];\n          }\n        }\n      }\n    };\n  }, [margins]);\n  var arrow = useMemo(function () {\n    return {\n      name: 'arrow',\n      options: {\n        padding: function padding() {\n          // The options here are used for Popper 2.8.4 and up.\n          // For earlier version, padding is handled in popoverArrowMargins below.\n          if (!arrowMargins.current) {\n            return 0;\n          }\n\n          var _arrowMargins$current = arrowMargins.current,\n              top = _arrowMargins$current.top,\n              right = _arrowMargins$current.right;\n          var padding = top || right;\n          return {\n            top: padding,\n            left: padding,\n            right: padding,\n            bottom: padding\n          };\n        }\n      }\n    };\n  }, [arrowMargins]); // Converts popover arrow margin to arrow modifier padding\n\n  var popoverArrowMargins = useMemo(function () {\n    return {\n      name: 'popoverArrowMargins',\n      enabled: true,\n      phase: 'main',\n      fn: function fn() {\n        return undefined;\n      },\n      requiresIfExists: ['arrow'],\n      effect: function effect(_ref2) {\n        var state = _ref2.state;\n\n        if (!overlayRef.current || !state.elements.arrow || !hasClass(overlayRef.current, popoverClass)) {\n          return undefined;\n        }\n\n        if (state.modifiersData['arrow#persistent']) {\n          // @popperjs/core <= 2.8.3 uses arrow#persistent to pass padding to arrow modifier.\n          var _getMargins = getMargins(state.elements.arrow),\n              top = _getMargins.top,\n              right = _getMargins.right;\n\n          var padding = top || right;\n          state.modifiersData['arrow#persistent'].padding = {\n            top: padding,\n            left: padding,\n            right: padding,\n            bottom: padding\n          };\n        } else {\n          // @popperjs/core >= 2.8.4 gets the padding from the arrow modifier options,\n          // so we'll get the margins here, and let the arrow modifier above pass\n          // it to popper.\n          arrowMargins.current = getMargins(state.elements.arrow);\n        }\n\n        state.elements.arrow.style.margin = '0';\n        return function () {\n          if (state.elements.arrow) state.elements.arrow.style.margin = '';\n        };\n      }\n    };\n  }, [popoverClass]);\n  return [callback, [offset, arrow, popoverArrowMargins]];\n}"]},"metadata":{},"sourceType":"module"}