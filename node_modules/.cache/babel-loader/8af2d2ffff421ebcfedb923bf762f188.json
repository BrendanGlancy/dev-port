{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { placements } from './popper';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\n\nvar Overlay = /*#__PURE__*/React.forwardRef(function (props, outerRef) {\n  var flip = props.flip,\n      offset = props.offset,\n      placement = props.placement,\n      _props$containerPaddi = props.containerPadding,\n      containerPadding = _props$containerPaddi === void 0 ? 5 : _props$containerPaddi,\n      _props$popperConfig = props.popperConfig,\n      popperConfig = _props$popperConfig === void 0 ? {} : _props$popperConfig,\n      Transition = props.transition;\n\n  var _useCallbackRef = useCallbackRef(),\n      rootElement = _useCallbackRef[0],\n      attachRef = _useCallbackRef[1];\n\n  var _useCallbackRef2 = useCallbackRef(),\n      arrowElement = _useCallbackRef2[0],\n      attachArrowRef = _useCallbackRef2[1];\n\n  var mergedRef = useMergedRefs(attachRef, outerRef);\n  var container = useWaitForDOMRef(props.container);\n  var target = useWaitForDOMRef(props.target);\n\n  var _useState = useState(!props.show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var _usePopper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip: flip,\n    offset: offset,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  })),\n      styles = _usePopper.styles,\n      attributes = _usePopper.attributes,\n      popper = _objectWithoutPropertiesLoose(_usePopper, [\"styles\", \"attributes\"]);\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited.apply(props, arguments);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  var mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  var child = props.children(_extends({}, popper, {\n    show: !!props.show,\n    props: _extends({}, attributes.popper, {\n      style: styles.popper,\n      ref: mergedRef\n    }),\n    arrowProps: _extends({}, attributes.arrow, {\n      style: styles.arrow,\n      ref: attachArrowRef\n    })\n  }));\n\n  if (Transition) {\n    var onExit = props.onExit,\n        onExiting = props.onExiting,\n        onEnter = props.onEnter,\n        onEntering = props.onEntering,\n        onEntered = props.onEntered;\n    child = /*#__PURE__*/React.createElement(Transition, {\n      \"in\": props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, child);\n  }\n\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nOverlay.propTypes = {\n  /**\n   * Set the visibility of the Overlay\n   */\n  show: PropTypes.bool,\n\n  /** Specify where the overlay element is positioned in relation to the target element */\n  placement: PropTypes.oneOf(placements),\n\n  /**\n   * A DOM Element, Ref to an element, or function that returns either. The `target` element is where\n   * the overlay is positioned relative to.\n   */\n  target: PropTypes.any,\n\n  /**\n   * A DOM Element, Ref to an element, or function that returns either. The `container` will have the Portal children\n   * appended to it.\n   */\n  container: PropTypes.any,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Overlay to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n\n  /**\n   * A render prop that returns an element to overlay and position. See\n   * the [react-popper documentation](https://github.com/FezVrasta/react-popper#children) for more info.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *     [string]: string | number,\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     [string]: string | number,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Control how much space there is between the edge of the boundary element and overlay.\n   * A convenience shortcut to setting `popperConfig.modfiers.preventOverflow.padding`\n   */\n  containerPadding: PropTypes.number,\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Specify whether the overlay should trigger `onHide` when the user clicks outside the overlay\n   */\n  rootClose: PropTypes.bool,\n\n  /**\n   * Specify event for toggling overlay\n   */\n  rootCloseEvent: PropTypes.oneOf(['click', 'mousedown']),\n\n  /**\n   * Specify disabled for disable RootCloseWrapper\n   */\n  rootCloseDisabled: PropTypes.bool,\n\n  /**\n   * A Callback fired by the Overlay when it wishes to be hidden.\n   *\n   * __required__ when `rootClose` is `true`.\n   *\n   * @type func\n   */\n  onHide: function onHide(props) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (props.rootClose) {\n      var _PropTypes$func;\n\n      return (_PropTypes$func = PropTypes.func).isRequired.apply(_PropTypes$func, [props].concat(args));\n    }\n\n    return PropTypes.func.apply(PropTypes, [props].concat(args));\n  },\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component\n   * used to animate the overlay as it changes visibility.\n   */\n  // @ts-ignore\n  transition: PropTypes.elementType,\n\n  /**\n   * Callback fired before the Overlay transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Overlay transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning out\n   */\n  onExited: PropTypes.func\n};\nexport default Overlay;","map":{"version":3,"sources":["/Users/brendanglancy/Desktop/dev-port/node_modules/react-bootstrap/node_modules/react-overlays/esm/Overlay.js"],"names":["_extends","_objectWithoutPropertiesLoose","PropTypes","React","useState","ReactDOM","useCallbackRef","useMergedRefs","placements","usePopper","useRootClose","useWaitForDOMRef","mergeOptionsWithPopperConfig","Overlay","forwardRef","props","outerRef","flip","offset","placement","_props$containerPaddi","containerPadding","_props$popperConfig","popperConfig","Transition","transition","_useCallbackRef","rootElement","attachRef","_useCallbackRef2","arrowElement","attachArrowRef","mergedRef","container","target","_useState","show","exited","setExited","_usePopper","enableEvents","styles","attributes","popper","handleHidden","onExited","apply","arguments","mountOverlay","onHide","disabled","rootClose","rootCloseDisabled","clickTrigger","rootCloseEvent","child","children","style","ref","arrowProps","arrow","onExit","onExiting","onEnter","onEntering","onEntered","createElement","appear","createPortal","displayName","propTypes","bool","oneOf","any","func","isRequired","number","object","_len","length","args","Array","_key","_PropTypes$func","concat","elementType"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { placements } from './popper';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\nvar Overlay = /*#__PURE__*/React.forwardRef(function (props, outerRef) {\n  var flip = props.flip,\n      offset = props.offset,\n      placement = props.placement,\n      _props$containerPaddi = props.containerPadding,\n      containerPadding = _props$containerPaddi === void 0 ? 5 : _props$containerPaddi,\n      _props$popperConfig = props.popperConfig,\n      popperConfig = _props$popperConfig === void 0 ? {} : _props$popperConfig,\n      Transition = props.transition;\n\n  var _useCallbackRef = useCallbackRef(),\n      rootElement = _useCallbackRef[0],\n      attachRef = _useCallbackRef[1];\n\n  var _useCallbackRef2 = useCallbackRef(),\n      arrowElement = _useCallbackRef2[0],\n      attachArrowRef = _useCallbackRef2[1];\n\n  var mergedRef = useMergedRefs(attachRef, outerRef);\n  var container = useWaitForDOMRef(props.container);\n  var target = useWaitForDOMRef(props.target);\n\n  var _useState = useState(!props.show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var _usePopper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip: flip,\n    offset: offset,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  })),\n      styles = _usePopper.styles,\n      attributes = _usePopper.attributes,\n      popper = _objectWithoutPropertiesLoose(_usePopper, [\"styles\", \"attributes\"]);\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited.apply(props, arguments);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  var mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  var child = props.children(_extends({}, popper, {\n    show: !!props.show,\n    props: _extends({}, attributes.popper, {\n      style: styles.popper,\n      ref: mergedRef\n    }),\n    arrowProps: _extends({}, attributes.arrow, {\n      style: styles.arrow,\n      ref: attachArrowRef\n    })\n  }));\n\n  if (Transition) {\n    var onExit = props.onExit,\n        onExiting = props.onExiting,\n        onEnter = props.onEnter,\n        onEntering = props.onEntering,\n        onEntered = props.onEntered;\n    child = /*#__PURE__*/React.createElement(Transition, {\n      \"in\": props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, child);\n  }\n\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nOverlay.propTypes = {\n  /**\n   * Set the visibility of the Overlay\n   */\n  show: PropTypes.bool,\n\n  /** Specify where the overlay element is positioned in relation to the target element */\n  placement: PropTypes.oneOf(placements),\n\n  /**\n   * A DOM Element, Ref to an element, or function that returns either. The `target` element is where\n   * the overlay is positioned relative to.\n   */\n  target: PropTypes.any,\n\n  /**\n   * A DOM Element, Ref to an element, or function that returns either. The `container` will have the Portal children\n   * appended to it.\n   */\n  container: PropTypes.any,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Overlay to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n\n  /**\n   * A render prop that returns an element to overlay and position. See\n   * the [react-popper documentation](https://github.com/FezVrasta/react-popper#children) for more info.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *     [string]: string | number,\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     [string]: string | number,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Control how much space there is between the edge of the boundary element and overlay.\n   * A convenience shortcut to setting `popperConfig.modfiers.preventOverflow.padding`\n   */\n  containerPadding: PropTypes.number,\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Specify whether the overlay should trigger `onHide` when the user clicks outside the overlay\n   */\n  rootClose: PropTypes.bool,\n\n  /**\n   * Specify event for toggling overlay\n   */\n  rootCloseEvent: PropTypes.oneOf(['click', 'mousedown']),\n\n  /**\n   * Specify disabled for disable RootCloseWrapper\n   */\n  rootCloseDisabled: PropTypes.bool,\n\n  /**\n   * A Callback fired by the Overlay when it wishes to be hidden.\n   *\n   * __required__ when `rootClose` is `true`.\n   *\n   * @type func\n   */\n  onHide: function onHide(props) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (props.rootClose) {\n      var _PropTypes$func;\n\n      return (_PropTypes$func = PropTypes.func).isRequired.apply(_PropTypes$func, [props].concat(args));\n    }\n\n    return PropTypes.func.apply(PropTypes, [props].concat(args));\n  },\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component\n   * used to animate the overlay as it changes visibility.\n   */\n  // @ts-ignore\n  transition: PropTypes.elementType,\n\n  /**\n   * Callback fired before the Overlay transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Overlay transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Overlay begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Overlay finishes transitioning out\n   */\n  onExited: PropTypes.func\n};\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}