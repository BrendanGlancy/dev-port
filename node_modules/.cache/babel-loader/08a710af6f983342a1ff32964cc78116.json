{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$fixed = _options.fixed,\n      fixed = _options$fixed === void 0 ? false : _options$fixed,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    fixed: fixed,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  }));\n\n  var menuProps = _extends({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n\n  var metadata = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? _extends({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\n\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var _useDropdownMenu = useDropdownMenu(options),\n      props = _useDropdownMenu[0],\n      meta = _useDropdownMenu[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.hasShown ? children(props, meta) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","map":{"version":3,"sources":["/Users/brendanglancy/Desktop/dev-port/node_modules/react-bootstrap/node_modules/react-overlays/esm/DropdownMenu.js"],"names":["_objectWithoutPropertiesLoose","_extends","PropTypes","React","useContext","useRef","useCallbackRef","DropdownContext","usePopper","useRootClose","mergeOptionsWithPopperConfig","noop","useDropdownMenu","options","context","_useCallbackRef","arrowElement","attachArrowRef","hasShownRef","_options","flip","offset","rootCloseEvent","_options$fixed","fixed","_options$popperConfig","popperConfig","_options$usePopper","shouldUsePopper","show","alignEnd","current","handleClose","e","toggle","_ref","drop","setMenu","menuElement","toggleElement","placement","popper","enabled","enableEvents","menuProps","ref","id","attributes","style","styles","metadata","hasShown","arrowProps","arrow","clickTrigger","disabled","propTypes","children","func","isRequired","bool","oneOf","object","string","defaultProps","DropdownMenu","_ref2","_useDropdownMenu","props","meta","createElement","Fragment","displayName"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$fixed = _options.fixed,\n      fixed = _options$fixed === void 0 ? false : _options$fixed,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    fixed: fixed,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  }));\n\n  var menuProps = _extends({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n\n  var metadata = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? _extends({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var _useDropdownMenu = useDropdownMenu(options),\n      props = _useDropdownMenu[0],\n      meta = _useDropdownMenu[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.hasShown ? children(props, meta) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}