{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nvar manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  var modalManager = provided || getManager();\n  var modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: function add(container, className) {\n      return modalManager.add(modal.current, container, className);\n    },\n    remove: function remove() {\n      return modalManager.remove(modal.current);\n    },\n    isTopModal: function isTopModal() {\n      return modalManager.isTopModal(modal.current);\n    },\n    setDialogRef: useCallback(function (ref) {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(function (ref) {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nvar Modal = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? 'dialog' : _ref$role,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      _ref$backdrop = _ref.backdrop,\n      backdrop = _ref$backdrop === void 0 ? true : _ref$backdrop,\n      _ref$keyboard = _ref.keyboard,\n      keyboard = _ref$keyboard === void 0 ? true : _ref$keyboard,\n      onBackdropClick = _ref.onBackdropClick,\n      onEscapeKeyDown = _ref.onEscapeKeyDown,\n      transition = _ref.transition,\n      backdropTransition = _ref.backdropTransition,\n      _ref$autoFocus = _ref.autoFocus,\n      autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,\n      _ref$enforceFocus = _ref.enforceFocus,\n      enforceFocus = _ref$enforceFocus === void 0 ? true : _ref$enforceFocus,\n      _ref$restoreFocus = _ref.restoreFocus,\n      restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,\n      restoreFocusOptions = _ref.restoreFocusOptions,\n      renderDialog = _ref.renderDialog,\n      _ref$renderBackdrop = _ref.renderBackdrop,\n      renderBackdrop = _ref$renderBackdrop === void 0 ? function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", props);\n  } : _ref$renderBackdrop,\n      providedManager = _ref.manager,\n      containerRef = _ref.container,\n      containerClassName = _ref.containerClassName,\n      onShow = _ref.onShow,\n      _ref$onHide = _ref.onHide,\n      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,\n      onExit = _ref.onExit,\n      onExited = _ref.onExited,\n      onExiting = _ref.onExiting,\n      onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"containerClassName\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\n\n  var container = useWaitForDOMRef(containerRef);\n  var modal = useModalManager(providedManager);\n  var isMounted = useMounted();\n  var prevShow = usePrevious(show);\n\n  var _useState = useState(!show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var lastFocusRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return modal;\n  }, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  var handleShow = useEventCallback(function () {\n    modal.add(container, containerClassName);\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    function () {\n      return setTimeout(handleEnforceFocus);\n    }, true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      var currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  var handleHide = useEventCallback(function () {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current; // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n\n\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(function () {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(function () {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(function () {\n    handleHide();\n  }); // --------------------------------\n\n  var handleEnforceFocus = useEventCallback(function () {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    var currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  var handleBackdropClick = useEventCallback(function (e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  var handleDocumentKeyDown = useEventCallback(function (e) {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  var removeFocusListenerRef = useRef();\n  var removeKeydownListenerRef = useRef();\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    onExited == null ? void 0 : onExited.apply(void 0, args);\n  };\n\n  var Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  var dialogProps = _extends({\n    role: role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style: style,\n    className: className,\n    tabIndex: -1\n  });\n\n  var dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/React.createElement(\"div\", dialogProps, /*#__PURE__*/React.cloneElement(children, {\n    role: 'document'\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/React.createElement(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      \"in\": !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, dialog);\n  }\n\n  var backdropElement = null;\n\n  if (backdrop) {\n    var BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/React.createElement(BackdropTransition, {\n        appear: true,\n        \"in\": !!show\n      }, backdropElement);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, backdropElement, dialog), container));\n});\nvar propTypes = {\n  /**\n   * Set the visibility of the Modal\n   */\n  show: PropTypes.bool,\n\n  /**\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\n   *\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\n   * page content can be placed behind a virtual backdrop as well as a visual one.\n   */\n  container: PropTypes.any,\n\n  /**\n   * A callback fired when the Modal is opening.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\n   *\n   * The `onHide` callback only signals intent from the Modal,\n   * you must actually set the `show` prop to `false` for the Modal to close.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Include a backdrop component.\n   */\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n\n  /**\n   * A function that returns the dialog component. Useful for custom\n   * rendering. **Note:** the component should make sure to apply the provided ref.\n   *\n   * ```js static\n   * renderDialog={props => <MyDialog {...props} />}\n   * ```\n   */\n  renderDialog: PropTypes.func,\n\n  /**\n   * A function that returns a backdrop component. Useful for custom\n   * backdrop rendering.\n   *\n   * ```js\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\n   * ```\n   */\n  renderBackdrop: PropTypes.func,\n\n  /**\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\n   *\n   * If preventDefault() is called on the keyboard event, closing the modal will be cancelled.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * A callback fired when the backdrop, if specified, is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * A css class or set of classes applied to the modal container when the modal is open,\n   * and removed when it is closed.\n   */\n  containerClassName: PropTypes.string,\n\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: PropTypes.bool,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the dialog component.\n   */\n  transition: PropTypes.elementType,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the backdrop components.\n   */\n  backdropTransition: PropTypes.elementType,\n\n  /**\n   * When `true` The modal will automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes. This also\n   * works correctly with any Modal children that have the `autoFocus` prop.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while open.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  enforceFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: PropTypes.bool,\n\n  /**\n   * Options passed to focus function when `restoreFocus` is set to `true`\n   *\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\n   */\n  restoreFocusOptions: PropTypes.shape({\n    preventScroll: PropTypes.bool\n  }),\n\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * A ModalManager instance used to track and manage the state of open\n   * Modals. Useful when customizing how modals interact within a container\n   */\n  manager: PropTypes.instanceOf(ModalManager)\n};\nModal.displayName = 'Modal';\nModal.propTypes = propTypes;\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","map":{"version":3,"sources":["/Users/brendanglancy/Desktop/dev-port/node_modules/react-bootstrap/node_modules/react-overlays/esm/Modal.js"],"names":["_extends","_objectWithoutPropertiesLoose","activeElement","contains","canUseDOM","listen","PropTypes","React","useState","useRef","useCallback","useImperativeHandle","forwardRef","useEffect","ReactDOM","useMounted","useWillUnmount","usePrevious","useEventCallback","ModalManager","useWaitForDOMRef","manager","getManager","useModalManager","provided","modalManager","modal","dialog","backdrop","Object","assign","current","add","container","className","remove","isTopModal","setDialogRef","ref","setBackdropRef","Modal","_ref","_ref$show","show","_ref$role","role","style","children","_ref$backdrop","_ref$keyboard","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","_ref$autoFocus","autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","renderDialog","_ref$renderBackdrop","renderBackdrop","props","createElement","providedManager","containerRef","containerClassName","onShow","_ref$onHide","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","isMounted","prevShow","_useState","exited","setExited","lastFocusRef","handleShow","removeKeydownListenerRef","document","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","e","target","currentTarget","keyCode","defaultPrevented","handleHidden","_len","arguments","length","args","Array","_key","apply","Transition","dialogProps","undefined","tabIndex","cloneElement","appear","unmountOnExit","backdropElement","BackdropTransition","onClick","Fragment","createPortal","propTypes","bool","any","func","oneOfType","oneOf","string","elementType","shape","preventScroll","instanceOf","displayName","Manager"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nvar manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  var modalManager = provided || getManager();\n  var modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: function add(container, className) {\n      return modalManager.add(modal.current, container, className);\n    },\n    remove: function remove() {\n      return modalManager.remove(modal.current);\n    },\n    isTopModal: function isTopModal() {\n      return modalManager.isTopModal(modal.current);\n    },\n    setDialogRef: useCallback(function (ref) {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(function (ref) {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nvar Modal = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? 'dialog' : _ref$role,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      _ref$backdrop = _ref.backdrop,\n      backdrop = _ref$backdrop === void 0 ? true : _ref$backdrop,\n      _ref$keyboard = _ref.keyboard,\n      keyboard = _ref$keyboard === void 0 ? true : _ref$keyboard,\n      onBackdropClick = _ref.onBackdropClick,\n      onEscapeKeyDown = _ref.onEscapeKeyDown,\n      transition = _ref.transition,\n      backdropTransition = _ref.backdropTransition,\n      _ref$autoFocus = _ref.autoFocus,\n      autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,\n      _ref$enforceFocus = _ref.enforceFocus,\n      enforceFocus = _ref$enforceFocus === void 0 ? true : _ref$enforceFocus,\n      _ref$restoreFocus = _ref.restoreFocus,\n      restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,\n      restoreFocusOptions = _ref.restoreFocusOptions,\n      renderDialog = _ref.renderDialog,\n      _ref$renderBackdrop = _ref.renderBackdrop,\n      renderBackdrop = _ref$renderBackdrop === void 0 ? function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", props);\n  } : _ref$renderBackdrop,\n      providedManager = _ref.manager,\n      containerRef = _ref.container,\n      containerClassName = _ref.containerClassName,\n      onShow = _ref.onShow,\n      _ref$onHide = _ref.onHide,\n      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,\n      onExit = _ref.onExit,\n      onExited = _ref.onExited,\n      onExiting = _ref.onExiting,\n      onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"containerClassName\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\n\n  var container = useWaitForDOMRef(containerRef);\n  var modal = useModalManager(providedManager);\n  var isMounted = useMounted();\n  var prevShow = usePrevious(show);\n\n  var _useState = useState(!show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var lastFocusRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return modal;\n  }, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  var handleShow = useEventCallback(function () {\n    modal.add(container, containerClassName);\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    function () {\n      return setTimeout(handleEnforceFocus);\n    }, true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      var currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  var handleHide = useEventCallback(function () {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(function () {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(function () {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(function () {\n    handleHide();\n  }); // --------------------------------\n\n  var handleEnforceFocus = useEventCallback(function () {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    var currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  var handleBackdropClick = useEventCallback(function (e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  var handleDocumentKeyDown = useEventCallback(function (e) {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  var removeFocusListenerRef = useRef();\n  var removeKeydownListenerRef = useRef();\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    onExited == null ? void 0 : onExited.apply(void 0, args);\n  };\n\n  var Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  var dialogProps = _extends({\n    role: role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style: style,\n    className: className,\n    tabIndex: -1\n  });\n\n  var dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/React.createElement(\"div\", dialogProps, /*#__PURE__*/React.cloneElement(children, {\n    role: 'document'\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/React.createElement(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      \"in\": !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, dialog);\n  }\n\n  var backdropElement = null;\n\n  if (backdrop) {\n    var BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/React.createElement(BackdropTransition, {\n        appear: true,\n        \"in\": !!show\n      }, backdropElement);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, backdropElement, dialog), container));\n});\nvar propTypes = {\n  /**\n   * Set the visibility of the Modal\n   */\n  show: PropTypes.bool,\n\n  /**\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\n   *\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\n   * page content can be placed behind a virtual backdrop as well as a visual one.\n   */\n  container: PropTypes.any,\n\n  /**\n   * A callback fired when the Modal is opening.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\n   *\n   * The `onHide` callback only signals intent from the Modal,\n   * you must actually set the `show` prop to `false` for the Modal to close.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Include a backdrop component.\n   */\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n\n  /**\n   * A function that returns the dialog component. Useful for custom\n   * rendering. **Note:** the component should make sure to apply the provided ref.\n   *\n   * ```js static\n   * renderDialog={props => <MyDialog {...props} />}\n   * ```\n   */\n  renderDialog: PropTypes.func,\n\n  /**\n   * A function that returns a backdrop component. Useful for custom\n   * backdrop rendering.\n   *\n   * ```js\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\n   * ```\n   */\n  renderBackdrop: PropTypes.func,\n\n  /**\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\n   *\n   * If preventDefault() is called on the keyboard event, closing the modal will be cancelled.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * A callback fired when the backdrop, if specified, is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * A css class or set of classes applied to the modal container when the modal is open,\n   * and removed when it is closed.\n   */\n  containerClassName: PropTypes.string,\n\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: PropTypes.bool,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the dialog component.\n   */\n  transition: PropTypes.elementType,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the backdrop components.\n   */\n  backdropTransition: PropTypes.elementType,\n\n  /**\n   * When `true` The modal will automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes. This also\n   * works correctly with any Modal children that have the `autoFocus` prop.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while open.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  enforceFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: PropTypes.bool,\n\n  /**\n   * Options passed to focus function when `restoreFocus` is set to `true`\n   *\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\n   */\n  restoreFocusOptions: PropTypes.shape({\n    preventScroll: PropTypes.bool\n  }),\n\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * A ModalManager instance used to track and manage the state of open\n   * Modals. Useful when customizing how modals interact within a container\n   */\n  manager: PropTypes.instanceOf(ModalManager)\n};\nModal.displayName = 'Modal';\nModal.propTypes = propTypes;\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});"]},"metadata":{},"sourceType":"module"}