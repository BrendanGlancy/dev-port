{"ast":null,"code":"import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\n\nfunction parseDuration(node, property) {\n  var str = css(node, property) || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nexport default function transitionEndListener(element, handler) {\n  var duration = parseDuration(element, 'transitionDuration');\n  var delay = parseDuration(element, 'transitionDelay');\n  var remove = transitionEnd(element, function (e) {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","map":{"version":3,"sources":["/Users/brendanglancy/Desktop/dev-port/node_modules/react-bootstrap/esm/transitionEndListener.js"],"names":["css","transitionEnd","parseDuration","node","property","str","mult","indexOf","parseFloat","transitionEndListener","element","handler","duration","delay","remove","e","target"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,QAA7B,EAAuC;AACrC,MAAIC,GAAG,GAAGL,GAAG,CAACG,IAAD,EAAOC,QAAP,CAAH,IAAuB,EAAjC;AACA,MAAIE,IAAI,GAAGD,GAAG,CAACE,OAAJ,CAAY,IAAZ,MAAsB,CAAC,CAAvB,GAA2B,IAA3B,GAAkC,CAA7C;AACA,SAAOC,UAAU,CAACH,GAAD,CAAV,GAAkBC,IAAzB;AACD;;AAED,eAAe,SAASG,qBAAT,CAA+BC,OAA/B,EAAwCC,OAAxC,EAAiD;AAC9D,MAAIC,QAAQ,GAAGV,aAAa,CAACQ,OAAD,EAAU,oBAAV,CAA5B;AACA,MAAIG,KAAK,GAAGX,aAAa,CAACQ,OAAD,EAAU,iBAAV,CAAzB;AACA,MAAII,MAAM,GAAGb,aAAa,CAACS,OAAD,EAAU,UAAUK,CAAV,EAAa;AAC/C,QAAIA,CAAC,CAACC,MAAF,KAAaN,OAAjB,EAA0B;AACxBI,MAAAA,MAAM;AACNH,MAAAA,OAAO,CAACI,CAAD,CAAP;AACD;AACF,GALyB,EAKvBH,QAAQ,GAAGC,KALY,CAA1B;AAMD","sourcesContent":["import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\n\nfunction parseDuration(node, property) {\n  var str = css(node, property) || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nexport default function transitionEndListener(element, handler) {\n  var duration = parseDuration(element, 'transitionDuration');\n  var delay = parseDuration(element, 'transitionDelay');\n  var remove = transitionEnd(element, function (e) {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}"]},"metadata":{},"sourceType":"module"}