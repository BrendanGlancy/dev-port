{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"type\", \"name\", \"value\", \"onChange\"];\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","map":{"version":3,"sources":["/Users/brendanglancy/Desktop/dev-port/node_modules/react-bootstrap/esm/ToggleButtonGroup.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","invariant","useUncontrolled","chainFunction","map","ButtonGroup","ToggleButton","defaultProps","type","vertical","ToggleButtonGroup","forwardRef","props","ref","_useUncontrolled","value","children","name","onChange","controlledProps","getValues","concat","handleToggle","inputVal","event","values","isActive","indexOf","filter","n","process","env","NODE_ENV","createElement","toggle","child","_child$props","childVal","childOnChange","handler","e","cloneElement","checked","Button"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"type\", \"name\", \"value\", \"onChange\"];\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio',\n  vertical: false\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    if (!onChange) {\n      return;\n    }\n\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive && onChange) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;"]},"metadata":{},"sourceType":"module"}