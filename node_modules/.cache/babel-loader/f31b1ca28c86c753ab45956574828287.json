{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"children\", \"eventKey\", \"onClick\"];\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","map":{"version":3,"sources":["/Users/brendanglancy/Desktop/dev-port/node_modules/react-bootstrap/esm/AccordionToggle.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useContext","SelectableContext","AccordionContext","useAccordionToggle","eventKey","onClick","contextEventKey","onSelect","e","eventKeyPassed","AccordionToggle","forwardRef","_ref","ref","_ref$as","as","Component","children","props","accordionOnClick","type","createElement"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,IAAIC,SAAS,GAAG,CAAC,IAAD,EAAO,UAAP,EAAmB,UAAnB,EAA+B,SAA/B,CAAhB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,OAAtC,EAA+C;AACpD,MAAIC,eAAe,GAAGN,UAAU,CAACE,gBAAD,CAAhC;AACA,MAAIK,QAAQ,GAAGP,UAAU,CAACC,iBAAD,CAAzB;AACA,SAAO,UAAUO,CAAV,EAAa;AAClB;AACJ;AACA;AACA;AACI,QAAIC,cAAc,GAAGL,QAAQ,KAAKE,eAAb,GAA+B,IAA/B,GAAsCF,QAA3D;AACA,QAAIG,QAAJ,EAAcA,QAAQ,CAACE,cAAD,EAAiBD,CAAjB,CAAR;AACd,QAAIH,OAAJ,EAAaA,OAAO,CAACG,CAAD,CAAP;AACd,GARD;AASD;AACD,IAAIE,eAAe,GAAG,aAAaX,KAAK,CAACY,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACvE,MAAIC,OAAO,GAAGF,IAAI,CAACG,EAAnB;AAAA,MACIC,SAAS,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqB,QAArB,GAAgCA,OADhD;AAAA,MAEIG,QAAQ,GAAGL,IAAI,CAACK,QAFpB;AAAA,MAGIb,QAAQ,GAAGQ,IAAI,CAACR,QAHpB;AAAA,MAIIC,OAAO,GAAGO,IAAI,CAACP,OAJnB;AAAA,MAKIa,KAAK,GAAGrB,6BAA6B,CAACe,IAAD,EAAOd,SAAP,CALzC;;AAOA,MAAIqB,gBAAgB,GAAGhB,kBAAkB,CAACC,QAAD,EAAWC,OAAX,CAAzC;;AAEA,MAAIW,SAAS,KAAK,QAAlB,EAA4B;AAC1BE,IAAAA,KAAK,CAACE,IAAN,GAAa,QAAb;AACD;;AAED,SAAO,aAAarB,KAAK,CAACsB,aAAN,CAAoBL,SAApB,EAA+BpB,QAAQ,CAAC;AAC1DiB,IAAAA,GAAG,EAAEA,GADqD;AAE1DR,IAAAA,OAAO,EAAEc;AAFiD,GAAD,EAGxDD,KAHwD,CAAvC,EAGTD,QAHS,CAApB;AAID,CAlBkC,CAAnC;AAmBA,eAAeP,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"children\", \"eventKey\", \"onClick\"];\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;"]},"metadata":{},"sourceType":"module"}