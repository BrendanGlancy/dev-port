{"ast":null,"code":"import { useEffect, useRef } from 'react';\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\n\nfunction useUpdateEffect(fn, deps) {\n  var isFirst = useRef(true);\n  useEffect(function () {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n\n    return fn();\n  }, deps);\n}\n\nexport default useUpdateEffect;","map":{"version":3,"sources":["/Users/brendanglancy/Desktop/dev-port/node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useUpdateEffect.js"],"names":["useEffect","useRef","useUpdateEffect","fn","deps","isFirst","current"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAT,CAAyBC,EAAzB,EAA6BC,IAA7B,EAAmC;AACjC,MAAIC,OAAO,GAAGJ,MAAM,CAAC,IAAD,CAApB;AACAD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIK,OAAO,CAACC,OAAZ,EAAqB;AACnBD,MAAAA,OAAO,CAACC,OAAR,GAAkB,KAAlB;AACA;AACD;;AAED,WAAOH,EAAE,EAAT;AACD,GAPQ,EAONC,IAPM,CAAT;AAQD;;AAED,eAAeF,eAAf","sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\n\nfunction useUpdateEffect(fn, deps) {\n  var isFirst = useRef(true);\n  useEffect(function () {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n\n    return fn();\n  }, deps);\n}\n\nexport default useUpdateEffect;"]},"metadata":{},"sourceType":"module"}