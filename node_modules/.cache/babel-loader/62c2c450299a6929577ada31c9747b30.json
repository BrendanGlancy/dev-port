{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"],\n    _excluded2 = [\"isChild\"],\n    _excluded3 = [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"];\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/brendanglancy/Desktop/dev-port/node_modules/react-bootstrap/esm/ProgressBar.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","classNames","React","cloneElement","useBootstrapPrefix","map","ROUND_PRECISION","onlyProgressBar","props","propName","componentName","children","error","Children","forEach","child","element","createElement","ProgressBar","type","childType","childIdentifier","isValidElement","displayName","name","Error","defaultProps","min","max","animated","isChild","srOnly","striped","getPercentage","now","percentage","Math","round","renderProgressBar","_ref","ref","_classNames","label","className","style","variant","bsPrefix","role","width","forwardRef","_ref2","wrapperProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"],\n    _excluded2 = [\"isChild\"],\n    _excluded3 = [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"];\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}