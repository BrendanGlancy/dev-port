{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"children\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"];\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport SelectableContext from './SelectableContext';\nvar NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nvar Navbar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    expanded: 'onToggle'\n  }),\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      expand = _useUncontrolled.expand,\n      variant = _useUncontrolled.variant,\n      bg = _useUncontrolled.bg,\n      fixed = _useUncontrolled.fixed,\n      sticky = _useUncontrolled.sticky,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n      expanded = _useUncontrolled.expanded,\n      _onToggle = _useUncontrolled.onToggle,\n      onSelect = _useUncontrolled.onSelect,\n      collapseOnSelect = _useUncontrolled.collapseOnSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  var handleCollapse = useCallback(function () {\n    if (onSelect) onSelect.apply(void 0, arguments);\n\n    if (collapseOnSelect && expanded) {\n      if (_onToggle) {\n        _onToggle(false);\n      }\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  var expandClass = bsPrefix + \"-expand\";\n  if (typeof expand === 'string') expandClass = expandClass + \"-\" + expand;\n  var navbarContext = useMemo(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle && _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: !!expanded\n    };\n  }, [bsPrefix, expanded, _onToggle]);\n  return /*#__PURE__*/React.createElement(NavbarContext.Provider, {\n    value: navbarContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleCollapse\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: classNames(className, bsPrefix, expand && expandClass, variant && bsPrefix + \"-\" + variant, bg && \"bg-\" + bg, sticky && \"sticky-\" + sticky, fixed && \"fixed-\" + fixed)\n  }), children)));\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nNavbar.Brand = NavbarBrand;\nNavbar.Toggle = NavbarToggle;\nNavbar.Collapse = NavbarCollapse;\nNavbar.Text = NavbarText;\nexport default Navbar;","map":{"version":3,"sources":["/Users/brendanglancy/Desktop/dev-port/node_modules/react-bootstrap/esm/Navbar.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","classNames","React","useCallback","useMemo","useUncontrolled","createWithBsPrefix","NavbarBrand","NavbarCollapse","NavbarToggle","useBootstrapPrefix","NavbarContext","SelectableContext","NavbarText","Component","defaultProps","expand","variant","collapseOnSelect","Navbar","forwardRef","props","ref","_useUncontrolled","expanded","initialBsPrefix","bsPrefix","bg","fixed","sticky","className","children","_useUncontrolled$as","as","_onToggle","onToggle","onSelect","controlledProps","handleCollapse","apply","arguments","role","undefined","expandClass","navbarContext","createElement","Provider","value","displayName","Brand","Toggle","Collapse","Text"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"children\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"];\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport SelectableContext from './SelectableContext';\nvar NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nvar Navbar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    expanded: 'onToggle'\n  }),\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      expand = _useUncontrolled.expand,\n      variant = _useUncontrolled.variant,\n      bg = _useUncontrolled.bg,\n      fixed = _useUncontrolled.fixed,\n      sticky = _useUncontrolled.sticky,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n      expanded = _useUncontrolled.expanded,\n      _onToggle = _useUncontrolled.onToggle,\n      onSelect = _useUncontrolled.onSelect,\n      collapseOnSelect = _useUncontrolled.collapseOnSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  var handleCollapse = useCallback(function () {\n    if (onSelect) onSelect.apply(void 0, arguments);\n\n    if (collapseOnSelect && expanded) {\n      if (_onToggle) {\n        _onToggle(false);\n      }\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  var expandClass = bsPrefix + \"-expand\";\n  if (typeof expand === 'string') expandClass = expandClass + \"-\" + expand;\n  var navbarContext = useMemo(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle && _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: !!expanded\n    };\n  }, [bsPrefix, expanded, _onToggle]);\n  return /*#__PURE__*/React.createElement(NavbarContext.Provider, {\n    value: navbarContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleCollapse\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: classNames(className, bsPrefix, expand && expandClass, variant && bsPrefix + \"-\" + variant, bg && \"bg-\" + bg, sticky && \"sticky-\" + sticky, fixed && \"fixed-\" + fixed)\n  }), children)));\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nNavbar.Brand = NavbarBrand;\nNavbar.Toggle = NavbarToggle;\nNavbar.Collapse = NavbarCollapse;\nNavbar.Text = NavbarText;\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}