{"version":3,"sources":["../../../shared/lib/head.tsx"],"sourcesContent":["import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n    let hasKey = false\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (\n        process.env.NODE_ENV !== 'development' &&\n        process.env.__NEXT_OPTIMIZE_FONTS &&\n        !props.inAmpMode\n      ) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css', 'https://use.typekit.net/'].some(\n            (url) => c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n\n          // Add this attribute to make it easy to identify optimized tags\n          newProps['data-optimized-fonts'] = true\n\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\nexport default Head\n"],"names":[],"mappings":"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"}