{"version":3,"sources":["../../../lib/eslint/customFormatter.ts"],"sourcesContent":["import chalk from 'chalk'\nimport path from 'path'\n\n// eslint-disable-next-line no-shadow\nexport enum MessageSeverity {\n  Warning = 1,\n  Error = 2,\n}\n\ninterface LintMessage {\n  ruleId: string | null\n  severity: 1 | 2\n  message: string\n  line: number\n  column: number\n}\n\nexport interface LintResult {\n  filePath: string\n  messages: LintMessage[]\n  errorCount: number\n  warningCount: number\n  output?: string\n  source?: string\n}\n\nfunction pluginCount(messages: LintMessage[]): {\n  nextPluginErrorCount: number\n  nextPluginWarningCount: number\n} {\n  let nextPluginWarningCount = 0\n  let nextPluginErrorCount = 0\n\n  for (let i = 0; i < messages.length; i++) {\n    const { severity, ruleId } = messages[i]\n\n    if (ruleId?.includes('@next/next')) {\n      if (severity === MessageSeverity.Warning) {\n        nextPluginWarningCount += 1\n      } else {\n        nextPluginErrorCount += 1\n      }\n    }\n  }\n\n  return {\n    nextPluginErrorCount,\n    nextPluginWarningCount,\n  }\n}\n\nfunction formatMessage(\n  dir: string,\n  messages: LintMessage[],\n  filePath: string\n): string {\n  let fileName = path.posix.normalize(\n    path.relative(dir, filePath).replace(/\\\\/g, '/')\n  )\n\n  if (!fileName.startsWith('.')) {\n    fileName = './' + fileName\n  }\n\n  let output = '\\n' + chalk.cyan(fileName)\n\n  for (let i = 0; i < messages.length; i++) {\n    const { message, severity, line, column, ruleId } = messages[i]\n\n    output = output + '\\n'\n\n    if (line && column) {\n      output =\n        output +\n        chalk.yellow(line.toString()) +\n        ':' +\n        chalk.yellow(column.toString()) +\n        '  '\n    }\n\n    if (severity === MessageSeverity.Warning) {\n      output += chalk.yellow.bold('Warning') + ': '\n    } else {\n      output += chalk.red.bold('Error') + ': '\n    }\n\n    output += message\n\n    if (ruleId) {\n      output += '  ' + chalk.gray.bold(ruleId)\n    }\n  }\n\n  return output\n}\n\nexport function formatResults(\n  baseDir: string,\n  results: LintResult[],\n  format: (r: LintResult[]) => string\n): {\n  output: string\n  totalNextPluginErrorCount: number\n  totalNextPluginWarningCount: number\n} {\n  let totalNextPluginErrorCount = 0\n  let totalNextPluginWarningCount = 0\n  let resultsWithMessages = results.filter(({ messages }) => messages?.length)\n\n  // Track number of Next.js plugin errors and warnings\n  resultsWithMessages.forEach(({ messages }) => {\n    const res = pluginCount(messages)\n    totalNextPluginErrorCount += res.nextPluginErrorCount\n    totalNextPluginWarningCount += res.nextPluginWarningCount\n  })\n\n  // Use user defined formatter or Next.js's built-in custom formatter\n  const output = format\n    ? format(resultsWithMessages)\n    : resultsWithMessages\n        .map(({ messages, filePath }) =>\n          formatMessage(baseDir, messages, filePath)\n        )\n        .join('\\n')\n\n  return {\n    output:\n      resultsWithMessages.length > 0\n        ? output +\n          `\\n\\n${chalk.cyan(\n            'info'\n          )}  - Need to disable some ESLint rules? Learn more here: https://nextjs.org/docs/basic-features/eslint#disabling-rules`\n        : '',\n    totalNextPluginErrorCount,\n    totalNextPluginWarningCount,\n  }\n}\n"],"names":[],"mappings":"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"}