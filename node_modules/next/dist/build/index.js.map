{"version":3,"sources":["../../build/index.ts"],"sourcesContent":["import { loadEnvConfig } from '@next/env'\nimport chalk from 'chalk'\nimport crypto from 'crypto'\nimport { promises, writeFileSync } from 'fs'\nimport { Worker } from '../lib/worker'\nimport devalue from 'next/dist/compiled/devalue'\nimport escapeStringRegexp from 'next/dist/compiled/escape-string-regexp'\nimport findUp from 'next/dist/compiled/find-up'\nimport { nanoid } from 'next/dist/compiled/nanoid/index.cjs'\nimport { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport path from 'path'\nimport formatWebpackMessages from '../client/dev/error-overlay/format-webpack-messages'\nimport {\n  STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR,\n  PUBLIC_DIR_MIDDLEWARE_CONFLICT,\n} from '../lib/constants'\nimport { fileExists } from '../lib/file-exists'\nimport { findPagesDir } from '../lib/find-pages-dir'\nimport loadCustomRoutes, {\n  CustomRoutes,\n  getRedirectStatus,\n  modifyRouteRegex,\n  normalizeRouteRegex,\n  Redirect,\n  Rewrite,\n  RouteType,\n} from '../lib/load-custom-routes'\nimport { nonNullable } from '../lib/non-nullable'\nimport { recursiveDelete } from '../lib/recursive-delete'\nimport { verifyAndLint } from '../lib/verifyAndLint'\nimport { verifyTypeScriptSetup } from '../lib/verifyTypeScriptSetup'\nimport {\n  BUILD_ID_FILE,\n  BUILD_MANIFEST,\n  CLIENT_STATIC_FILES_PATH,\n  EXPORT_DETAIL,\n  EXPORT_MARKER,\n  FONT_MANIFEST,\n  IMAGES_MANIFEST,\n  PAGES_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  PRERENDER_MANIFEST,\n  REACT_LOADABLE_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n  SERVER_FILES_MANIFEST,\n  STATIC_STATUS_PAGES,\n} from '../shared/lib/constants'\nimport {\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../shared/lib/router/utils'\nimport { __ApiPreviewProps } from '../server/api-utils'\nimport loadConfig, { isTargetLikeServerless } from '../server/config'\nimport { BuildManifest } from '../server/get-page-files'\nimport '../server/node-polyfill-fetch'\nimport { normalizePagePath } from '../server/normalize-page-path'\nimport { getPagePath } from '../server/require'\nimport * as ciEnvironment from '../telemetry/ci-info'\nimport {\n  eventBuildCompleted,\n  eventBuildOptimize,\n  eventCliSession,\n  eventNextPlugins,\n  eventTypeCheckCompleted,\n} from '../telemetry/events'\nimport { Telemetry } from '../telemetry/storage'\nimport { CompilerResult, runCompiler } from './compiler'\nimport { createEntrypoints, createPagesMapping } from './entries'\nimport { generateBuildId } from './generate-build-id'\nimport { isWriteable } from './is-writeable'\nimport * as Log from './output/log'\nimport createSpinner from './spinner'\nimport { trace, flushAllTraces, setGlobal } from '../telemetry/trace'\nimport {\n  collectPages,\n  detectConflictingPaths,\n  computeFromManifest,\n  getJsPageSizeInKb,\n  PageInfo,\n  printCustomRoutes,\n  printTreeView,\n  getCssFilePaths,\n} from './utils'\nimport getBaseWebpackConfig from './webpack-config'\nimport { PagesManifest } from './webpack/plugins/pages-manifest-plugin'\nimport { writeBuildId } from './write-build-id'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { isWebpack5 } from 'next/dist/compiled/webpack/webpack'\nimport { NextConfigComplete } from '../server/config-shared'\n\nexport type SsgRoute = {\n  initialRevalidateSeconds: number | false\n  srcRoute: string | null\n  dataRoute: string\n}\n\nexport type DynamicSsgRoute = {\n  routeRegex: string\n  fallback: string | null | false\n  dataRoute: string\n  dataRouteRegex: string\n}\n\nexport type PrerenderManifest = {\n  version: 3\n  routes: { [route: string]: SsgRoute }\n  dynamicRoutes: { [route: string]: DynamicSsgRoute }\n  notFoundRoutes: string[]\n  preview: __ApiPreviewProps\n}\n\nexport default async function build(\n  dir: string,\n  conf = null,\n  reactProductionProfiling = false,\n  debugOutput = false,\n  runLint = true\n): Promise<void> {\n  const nextBuildSpan = trace('next-build')\n\n  const buildResult = await nextBuildSpan.traceAsyncFn(async () => {\n    // attempt to load global env values so they are available in next.config.js\n    const { loadedEnvFiles } = nextBuildSpan\n      .traceChild('load-dotenv')\n      .traceFn(() => loadEnvConfig(dir, false, Log))\n\n    const config: NextConfigComplete = await nextBuildSpan\n      .traceChild('load-next-config')\n      .traceAsyncFn(() => loadConfig(PHASE_PRODUCTION_BUILD, dir, conf))\n    const distDir = path.join(dir, config.distDir)\n    setGlobal('distDir', distDir)\n\n    const { target } = config\n    const buildId: string = await nextBuildSpan\n      .traceChild('generate-buildid')\n      .traceAsyncFn(() => generateBuildId(config.generateBuildId, nanoid))\n\n    const customRoutes: CustomRoutes = await nextBuildSpan\n      .traceChild('load-custom-routes')\n      .traceAsyncFn(() => loadCustomRoutes(config))\n\n    const { headers, rewrites, redirects } = customRoutes\n\n    const cacheDir = path.join(distDir, 'cache')\n    if (ciEnvironment.isCI && !ciEnvironment.hasNextSupport) {\n      const hasCache = await fileExists(cacheDir)\n\n      if (!hasCache) {\n        // Intentionally not piping to stderr in case people fail in CI when\n        // stderr is detected.\n        console.log(\n          `${Log.prefixes.warn} No build cache found. Please configure build caching for faster rebuilds. Read more: https://nextjs.org/docs/messages/no-cache`\n        )\n      }\n    }\n\n    const telemetry = new Telemetry({ distDir })\n    setGlobal('telemetry', telemetry)\n\n    const publicDir = path.join(dir, 'public')\n    const pagesDir = findPagesDir(dir)\n    const hasPublicDir = await fileExists(publicDir)\n\n    telemetry.record(\n      eventCliSession(PHASE_PRODUCTION_BUILD, dir, {\n        webpackVersion: isWebpack5 ? 5 : 4,\n        cliCommand: 'build',\n        isSrcDir: path.relative(dir, pagesDir!).startsWith('src'),\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n      })\n    )\n\n    eventNextPlugins(path.resolve(dir)).then((events) =>\n      telemetry.record(events)\n    )\n\n    const ignoreTypeScriptErrors = Boolean(config.typescript.ignoreBuildErrors)\n    const typeCheckStart = process.hrtime()\n    const typeCheckingSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} ${\n        ignoreTypeScriptErrors\n          ? 'Skipping validation of types'\n          : 'Checking validity of types'\n      }`,\n    })\n\n    const verifyResult = await nextBuildSpan\n      .traceChild('verify-typescript-setup')\n      .traceAsyncFn(() =>\n        verifyTypeScriptSetup(\n          dir,\n          pagesDir,\n          !ignoreTypeScriptErrors,\n          !config.images.disableStaticImages,\n          cacheDir\n        )\n      )\n\n    const typeCheckEnd = process.hrtime(typeCheckStart)\n\n    if (!ignoreTypeScriptErrors) {\n      telemetry.record(\n        eventTypeCheckCompleted({\n          durationInSeconds: typeCheckEnd[0],\n          typescriptVersion: verifyResult.version,\n          inputFilesCount: verifyResult.result?.inputFilesCount,\n          totalFilesCount: verifyResult.result?.totalFilesCount,\n          incremental: verifyResult.result?.incremental,\n        })\n      )\n    }\n\n    if (typeCheckingSpinner) {\n      typeCheckingSpinner.stopAndPersist()\n    }\n\n    const ignoreESLint = Boolean(config.eslint.ignoreDuringBuilds)\n    const eslintCacheDir = path.join(cacheDir, 'eslint/')\n    if (!ignoreESLint && runLint) {\n      await nextBuildSpan\n        .traceChild('verify-and-lint')\n        .traceAsyncFn(async () => {\n          await verifyAndLint(\n            dir,\n            eslintCacheDir,\n            config.eslint?.dirs,\n            config.experimental.cpus,\n            config.experimental.workerThreads,\n            telemetry\n          )\n        })\n    }\n\n    const buildSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} Creating an optimized production build`,\n    })\n\n    const isLikeServerless = isTargetLikeServerless(target)\n\n    const pagePaths: string[] = await nextBuildSpan\n      .traceChild('collect-pages')\n      .traceAsyncFn(() => collectPages(pagesDir, config.pageExtensions))\n\n    // needed for static exporting since we want to replace with HTML\n    // files\n    const allStaticPages = new Set<string>()\n    let allPageInfos = new Map<string, PageInfo>()\n\n    const previewProps: __ApiPreviewProps = {\n      previewModeId: crypto.randomBytes(16).toString('hex'),\n      previewModeSigningKey: crypto.randomBytes(32).toString('hex'),\n      previewModeEncryptionKey: crypto.randomBytes(32).toString('hex'),\n    }\n\n    const mappedPages = nextBuildSpan\n      .traceChild('create-pages-mapping')\n      .traceFn(() =>\n        createPagesMapping(pagePaths, config.pageExtensions, isWebpack5, false)\n      )\n    const entrypoints = nextBuildSpan\n      .traceChild('create-entrypoints')\n      .traceFn(() =>\n        createEntrypoints(\n          mappedPages,\n          target,\n          buildId,\n          previewProps,\n          config,\n          loadedEnvFiles\n        )\n      )\n    const pageKeys = Object.keys(mappedPages)\n    const conflictingPublicFiles: string[] = []\n    const hasCustomErrorPage: boolean =\n      mappedPages['/_error'].startsWith('private-next-pages')\n    const hasPages404 = Boolean(\n      mappedPages['/404'] &&\n        mappedPages['/404'].startsWith('private-next-pages')\n    )\n\n    if (hasPublicDir) {\n      const hasPublicUnderScoreNextDir = await fileExists(\n        path.join(publicDir, '_next')\n      )\n      if (hasPublicUnderScoreNextDir) {\n        throw new Error(PUBLIC_DIR_MIDDLEWARE_CONFLICT)\n      }\n    }\n\n    await nextBuildSpan\n      .traceChild('public-dir-conflict-check')\n      .traceAsyncFn(async () => {\n        // Check if pages conflict with files in `public`\n        // Only a page of public file can be served, not both.\n        for (const page in mappedPages) {\n          const hasPublicPageFile = await fileExists(\n            path.join(publicDir, page === '/' ? '/index' : page),\n            'file'\n          )\n          if (hasPublicPageFile) {\n            conflictingPublicFiles.push(page)\n          }\n        }\n\n        const numConflicting = conflictingPublicFiles.length\n\n        if (numConflicting) {\n          throw new Error(\n            `Conflicting public and page file${\n              numConflicting === 1 ? ' was' : 's were'\n            } found. https://nextjs.org/docs/messages/conflicting-public-file-page\\n${conflictingPublicFiles.join(\n              '\\n'\n            )}`\n          )\n        }\n      })\n\n    const nestedReservedPages = pageKeys.filter((page) => {\n      return (\n        page.match(/\\/(_app|_document|_error)$/) && path.dirname(page) !== '/'\n      )\n    })\n\n    if (nestedReservedPages.length) {\n      Log.warn(\n        `The following reserved Next.js pages were detected not directly under the pages directory:\\n` +\n          nestedReservedPages.join('\\n') +\n          `\\nSee more info here: https://nextjs.org/docs/messages/nested-reserved-page\\n`\n      )\n    }\n\n    const restrictedRedirectPaths = ['/_next'].map((p) =>\n      config.basePath ? `${config.basePath}${p}` : p\n    )\n\n    const buildCustomRoute = (\n      r: {\n        source: string\n        locale?: false\n        basePath?: false\n        statusCode?: number\n        destination?: string\n      },\n      type: RouteType\n    ) => {\n      const keys: any[] = []\n\n      const routeRegex = pathToRegexp(r.source, keys, {\n        strict: true,\n        sensitive: false,\n        delimiter: '/', // default is `/#?`, but Next does not pass query info\n      })\n      let regexSource = routeRegex.source\n\n      if (!(r as any).internal) {\n        regexSource = modifyRouteRegex(\n          routeRegex.source,\n          type === 'redirect' ? restrictedRedirectPaths : undefined\n        )\n      }\n\n      return {\n        ...r,\n        ...(type === 'redirect'\n          ? {\n              statusCode: getRedirectStatus(r as Redirect),\n              permanent: undefined,\n            }\n          : {}),\n        regex: normalizeRouteRegex(regexSource),\n      }\n    }\n\n    const routesManifestPath = path.join(distDir, ROUTES_MANIFEST)\n    const routesManifest: {\n      version: number\n      pages404: boolean\n      basePath: string\n      redirects: Array<ReturnType<typeof buildCustomRoute>>\n      rewrites:\n        | Array<ReturnType<typeof buildCustomRoute>>\n        | {\n            beforeFiles: Array<ReturnType<typeof buildCustomRoute>>\n            afterFiles: Array<ReturnType<typeof buildCustomRoute>>\n            fallback: Array<ReturnType<typeof buildCustomRoute>>\n          }\n      headers: Array<ReturnType<typeof buildCustomRoute>>\n      dynamicRoutes: Array<{\n        page: string\n        regex: string\n        namedRegex?: string\n        routeKeys?: { [key: string]: string }\n      }>\n      dataRoutes: Array<{\n        page: string\n        routeKeys?: { [key: string]: string }\n        dataRouteRegex: string\n        namedDataRouteRegex?: string\n      }>\n      i18n?: {\n        domains?: Array<{\n          http?: true\n          domain: string\n          locales?: string[]\n          defaultLocale: string\n        }>\n        locales: string[]\n        defaultLocale: string\n        localeDetection?: false\n      }\n    } = nextBuildSpan.traceChild('generate-routes-manifest').traceFn(() => ({\n      version: 3,\n      pages404: true,\n      basePath: config.basePath,\n      redirects: redirects.map((r: any) => buildCustomRoute(r, 'redirect')),\n      headers: headers.map((r: any) => buildCustomRoute(r, 'header')),\n      dynamicRoutes: getSortedRoutes(pageKeys)\n        .filter(isDynamicRoute)\n        .map((page) => {\n          const routeRegex = getRouteRegex(page)\n          return {\n            page,\n            regex: normalizeRouteRegex(routeRegex.re.source),\n            routeKeys: routeRegex.routeKeys,\n            namedRegex: routeRegex.namedRegex,\n          }\n        }),\n      dataRoutes: [],\n      i18n: config.i18n || undefined,\n    }))\n\n    if (rewrites.beforeFiles.length === 0 && rewrites.fallback.length === 0) {\n      routesManifest.rewrites = rewrites.afterFiles.map((r: any) =>\n        buildCustomRoute(r, 'rewrite')\n      )\n    } else {\n      routesManifest.rewrites = {\n        beforeFiles: rewrites.beforeFiles.map((r: any) =>\n          buildCustomRoute(r, 'rewrite')\n        ),\n        afterFiles: rewrites.afterFiles.map((r: any) =>\n          buildCustomRoute(r, 'rewrite')\n        ),\n        fallback: rewrites.fallback.map((r: any) =>\n          buildCustomRoute(r, 'rewrite')\n        ),\n      }\n    }\n    const combinedRewrites: Rewrite[] = [\n      ...rewrites.beforeFiles,\n      ...rewrites.afterFiles,\n      ...rewrites.fallback,\n    ]\n\n    const distDirCreated = await nextBuildSpan\n      .traceChild('create-dist-dir')\n      .traceAsyncFn(async () => {\n        try {\n          await promises.mkdir(distDir, { recursive: true })\n          return true\n        } catch (err) {\n          if (err.code === 'EPERM') {\n            return false\n          }\n          throw err\n        }\n      })\n\n    if (!distDirCreated || !(await isWriteable(distDir))) {\n      throw new Error(\n        '> Build directory is not writeable. https://nextjs.org/docs/messages/build-dir-not-writeable'\n      )\n    }\n\n    if (config.cleanDistDir) {\n      await recursiveDelete(distDir, /^cache/)\n    }\n\n    // We need to write the manifest with rewrites before build\n    // so serverless can import the manifest\n    await nextBuildSpan\n      .traceChild('write-routes-manifest')\n      .traceAsyncFn(() =>\n        promises.writeFile(\n          routesManifestPath,\n          JSON.stringify(routesManifest),\n          'utf8'\n        )\n      )\n\n    const manifestPath = path.join(\n      distDir,\n      isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n      PAGES_MANIFEST\n    )\n\n    const requiredServerFiles = nextBuildSpan\n      .traceChild('generate-required-server-files')\n      .traceFn(() => ({\n        version: 1,\n        config: {\n          ...config,\n          compress: false,\n          configFile: undefined,\n        },\n        appDir: dir,\n        files: [\n          ROUTES_MANIFEST,\n          path.relative(distDir, manifestPath),\n          BUILD_MANIFEST,\n          PRERENDER_MANIFEST,\n          REACT_LOADABLE_MANIFEST,\n          config.optimizeFonts\n            ? path.join(\n                isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                FONT_MANIFEST\n              )\n            : null,\n          BUILD_ID_FILE,\n        ]\n          .filter(nonNullable)\n          .map((file) => path.join(config.distDir, file)),\n        ignore: [] as string[],\n      }))\n\n    const runWebpackSpan = nextBuildSpan.traceChild('run-webpack-compiler')\n    const configs = await runWebpackSpan\n      .traceChild('generate-webpack-config')\n      .traceAsyncFn(() =>\n        Promise.all([\n          getBaseWebpackConfig(dir, {\n            buildId,\n            reactProductionProfiling,\n            isServer: false,\n            config,\n            target,\n            pagesDir,\n            entrypoints: entrypoints.client,\n            rewrites,\n            runWebpackSpan,\n          }),\n          getBaseWebpackConfig(dir, {\n            buildId,\n            reactProductionProfiling,\n            isServer: true,\n            config,\n            target,\n            pagesDir,\n            entrypoints: entrypoints.server,\n            rewrites,\n            runWebpackSpan,\n          }),\n        ])\n      )\n\n    const clientConfig = configs[0]\n\n    if (\n      clientConfig.optimization &&\n      (clientConfig.optimization.minimize !== true ||\n        (clientConfig.optimization.minimizer &&\n          clientConfig.optimization.minimizer.length === 0))\n    ) {\n      Log.warn(\n        `Production code optimization has been disabled in your project. Read more: https://nextjs.org/docs/messages/minification-disabled`\n      )\n    }\n\n    const webpackBuildStart = process.hrtime()\n\n    let result: CompilerResult = { warnings: [], errors: [] }\n    // We run client and server compilation separately to optimize for memory usage\n    await runWebpackSpan.traceAsyncFn(async () => {\n      const clientResult = await runCompiler(clientConfig, { runWebpackSpan })\n      // Fail build if clientResult contains errors\n      if (clientResult.errors.length > 0) {\n        result = {\n          warnings: [...clientResult.warnings],\n          errors: [...clientResult.errors],\n        }\n      } else {\n        const serverResult = await runCompiler(configs[1], { runWebpackSpan })\n        result = {\n          warnings: [...clientResult.warnings, ...serverResult.warnings],\n          errors: [...clientResult.errors, ...serverResult.errors],\n        }\n      }\n    })\n\n    const webpackBuildEnd = process.hrtime(webpackBuildStart)\n    if (buildSpinner) {\n      buildSpinner.stopAndPersist()\n    }\n\n    result = nextBuildSpan\n      .traceChild('format-webpack-messages')\n      .traceFn(() => formatWebpackMessages(result))\n\n    if (result.errors.length > 0) {\n      // Only keep the first error. Others are often indicative\n      // of the same problem, but confuse the reader with noise.\n      if (result.errors.length > 1) {\n        result.errors.length = 1\n      }\n      const error = result.errors.join('\\n\\n')\n\n      console.error(chalk.red('Failed to compile.\\n'))\n\n      if (\n        error.indexOf('private-next-pages') > -1 &&\n        error.indexOf('does not contain a default export') > -1\n      ) {\n        const page_name_regex = /'private-next-pages\\/(?<page_name>[^']*)'/\n        const parsed = page_name_regex.exec(error)\n        const page_name = parsed && parsed.groups && parsed.groups.page_name\n        throw new Error(\n          `webpack build failed: found page without a React Component as default export in pages/${page_name}\\n\\nSee https://nextjs.org/docs/messages/page-without-valid-component for more info.`\n        )\n      }\n\n      console.error(error)\n      console.error()\n\n      if (\n        error.indexOf('private-next-pages') > -1 ||\n        error.indexOf('__next_polyfill__') > -1\n      ) {\n        throw new Error(\n          '> webpack config.resolve.alias was incorrectly overridden. https://nextjs.org/docs/messages/invalid-resolve-alias'\n        )\n      }\n      throw new Error('> Build failed because of webpack errors')\n    } else {\n      telemetry.record(\n        eventBuildCompleted(pagePaths, {\n          durationInSeconds: webpackBuildEnd[0],\n        })\n      )\n\n      if (result.warnings.length > 0) {\n        Log.warn('Compiled with warnings\\n')\n        console.warn(result.warnings.join('\\n\\n'))\n        console.warn()\n      } else {\n        Log.info('Compiled successfully')\n      }\n    }\n\n    const postCompileSpinner = createSpinner({\n      prefixText: `${Log.prefixes.info} Collecting page data`,\n    })\n\n    const buildManifestPath = path.join(distDir, BUILD_MANIFEST)\n\n    const ssgPages = new Set<string>()\n    const ssgStaticFallbackPages = new Set<string>()\n    const ssgBlockingFallbackPages = new Set<string>()\n    const staticPages = new Set<string>()\n    const invalidPages = new Set<string>()\n    const hybridAmpPages = new Set<string>()\n    const serverPropsPages = new Set<string>()\n    const additionalSsgPaths = new Map<string, Array<string>>()\n    const additionalSsgPathsEncoded = new Map<string, Array<string>>()\n    const pageTraceIncludes = new Map<string, Array<string>>()\n    const pageTraceExcludes = new Map<string, Array<string>>()\n    const pageInfos = new Map<string, PageInfo>()\n    const pagesManifest = JSON.parse(\n      await promises.readFile(manifestPath, 'utf8')\n    ) as PagesManifest\n    const buildManifest = JSON.parse(\n      await promises.readFile(buildManifestPath, 'utf8')\n    ) as BuildManifest\n\n    const timeout = config.experimental.staticPageGenerationTimeout || 0\n    const sharedPool = config.experimental.sharedPool || false\n    const staticWorker = sharedPool\n      ? require.resolve('./worker')\n      : require.resolve('./utils')\n    let infoPrinted = false\n    const staticWorkers = new Worker(staticWorker, {\n      timeout: timeout * 1000,\n      onRestart: (method, [arg], attempts) => {\n        if (method === 'exportPage') {\n          const { path: pagePath } = arg\n          if (attempts >= 3) {\n            throw new Error(\n              `Static page generation for ${pagePath} is still timing out after 3 attempts. See more info here https://nextjs.org/docs/messages/static-page-generation-timeout`\n            )\n          }\n          Log.warn(\n            `Restarted static page genertion for ${pagePath} because it took more than ${timeout} seconds`\n          )\n        } else {\n          const pagePath = arg\n          if (attempts >= 2) {\n            throw new Error(\n              `Collecting page data for ${pagePath} is still timing out after 2 attempts. See more info here https://nextjs.org/docs/messages/page-data-collection-timeout`\n            )\n          }\n          Log.warn(\n            `Restarted collecting page data for ${pagePath} because it took more than ${timeout} seconds`\n          )\n        }\n        if (!infoPrinted) {\n          Log.warn(\n            'See more info here https://nextjs.org/docs/messages/static-page-generation-timeout'\n          )\n          infoPrinted = true\n        }\n      },\n      numWorkers: config.experimental.cpus,\n      enableWorkerThreads: config.experimental.workerThreads,\n      exposedMethods: sharedPool\n        ? [\n            'hasCustomGetInitialProps',\n            'isPageStatic',\n            'getNamedExports',\n            'exportPage',\n          ]\n        : ['hasCustomGetInitialProps', 'isPageStatic', 'getNamedExports'],\n    }) as Worker &\n      Pick<\n        typeof import('./worker'),\n        | 'hasCustomGetInitialProps'\n        | 'isPageStatic'\n        | 'getNamedExports'\n        | 'exportPage'\n      >\n\n    const analysisBegin = process.hrtime()\n\n    const staticCheckSpan = nextBuildSpan.traceChild('static-check')\n    const {\n      customAppGetInitialProps,\n      namedExports,\n      isNextImageImported,\n      hasSsrAmpPages,\n      hasNonStaticErrorPage,\n    } = await staticCheckSpan.traceAsyncFn(async () => {\n      process.env.NEXT_PHASE = PHASE_PRODUCTION_BUILD\n\n      const runtimeEnvConfig = {\n        publicRuntimeConfig: config.publicRuntimeConfig,\n        serverRuntimeConfig: config.serverRuntimeConfig,\n      }\n\n      const nonStaticErrorPageSpan = staticCheckSpan.traceChild(\n        'check-static-error-page'\n      )\n      const errorPageHasCustomGetInitialProps =\n        nonStaticErrorPageSpan.traceAsyncFn(\n          async () =>\n            hasCustomErrorPage &&\n            (await staticWorkers.hasCustomGetInitialProps(\n              '/_error',\n              distDir,\n              isLikeServerless,\n              runtimeEnvConfig,\n              false\n            ))\n        )\n\n      const errorPageStaticResult = nonStaticErrorPageSpan.traceAsyncFn(\n        async () =>\n          hasCustomErrorPage &&\n          staticWorkers.isPageStatic(\n            '/_error',\n            distDir,\n            isLikeServerless,\n            runtimeEnvConfig,\n            config.httpAgentOptions,\n            config.i18n?.locales,\n            config.i18n?.defaultLocale\n          )\n      )\n\n      // we don't output _app in serverless mode so use _app export\n      // from _error instead\n      const appPageToCheck = isLikeServerless ? '/_error' : '/_app'\n\n      const customAppGetInitialPropsPromise =\n        staticWorkers.hasCustomGetInitialProps(\n          appPageToCheck,\n          distDir,\n          isLikeServerless,\n          runtimeEnvConfig,\n          true\n        )\n\n      const namedExportsPromise = staticWorkers.getNamedExports(\n        appPageToCheck,\n        distDir,\n        isLikeServerless,\n        runtimeEnvConfig\n      )\n\n      // eslint-disable-next-line no-shadow\n      let isNextImageImported: boolean | undefined\n      // eslint-disable-next-line no-shadow\n      let hasSsrAmpPages = false\n\n      const computedManifestData = await computeFromManifest(\n        buildManifest,\n        distDir,\n        config.experimental.gzipSize\n      )\n      await Promise.all(\n        pageKeys.map(async (page) => {\n          const checkPageSpan = staticCheckSpan.traceChild('check-page', {\n            page,\n          })\n          return checkPageSpan.traceAsyncFn(async () => {\n            const actualPage = normalizePagePath(page)\n            const [selfSize, allSize] = await getJsPageSizeInKb(\n              actualPage,\n              distDir,\n              buildManifest,\n              config.experimental.gzipSize,\n              computedManifestData\n            )\n\n            let isSsg = false\n            let isStatic = false\n            let isHybridAmp = false\n            let ssgPageRoutes: string[] | null = null\n\n            const nonReservedPage = !page.match(\n              /^\\/(_app|_error|_document|api(\\/|$))/\n            )\n\n            if (nonReservedPage) {\n              try {\n                let isPageStaticSpan =\n                  checkPageSpan.traceChild('is-page-static')\n                let workerResult = await isPageStaticSpan.traceAsyncFn(() => {\n                  return staticWorkers.isPageStatic(\n                    page,\n                    distDir,\n                    isLikeServerless,\n                    runtimeEnvConfig,\n                    config.httpAgentOptions,\n                    config.i18n?.locales,\n                    config.i18n?.defaultLocale,\n                    isPageStaticSpan.id\n                  )\n                })\n\n                if (config.experimental.nftTracing) {\n                  pageTraceIncludes.set(page, workerResult.traceIncludes || [])\n                  pageTraceExcludes.set(page, workerResult.traceExcludes || [])\n                }\n\n                if (\n                  workerResult.isStatic === false &&\n                  (workerResult.isHybridAmp || workerResult.isAmpOnly)\n                ) {\n                  hasSsrAmpPages = true\n                }\n\n                if (workerResult.isHybridAmp) {\n                  isHybridAmp = true\n                  hybridAmpPages.add(page)\n                }\n\n                if (workerResult.isNextImageImported) {\n                  isNextImageImported = true\n                }\n\n                if (workerResult.hasStaticProps) {\n                  ssgPages.add(page)\n                  isSsg = true\n\n                  if (\n                    workerResult.prerenderRoutes &&\n                    workerResult.encodedPrerenderRoutes\n                  ) {\n                    additionalSsgPaths.set(page, workerResult.prerenderRoutes)\n                    additionalSsgPathsEncoded.set(\n                      page,\n                      workerResult.encodedPrerenderRoutes\n                    )\n                    ssgPageRoutes = workerResult.prerenderRoutes\n                  }\n\n                  if (workerResult.prerenderFallback === 'blocking') {\n                    ssgBlockingFallbackPages.add(page)\n                  } else if (workerResult.prerenderFallback === true) {\n                    ssgStaticFallbackPages.add(page)\n                  }\n                } else if (workerResult.hasServerProps) {\n                  serverPropsPages.add(page)\n                } else if (\n                  workerResult.isStatic &&\n                  (await customAppGetInitialPropsPromise) === false\n                ) {\n                  staticPages.add(page)\n                  isStatic = true\n                }\n\n                if (hasPages404 && page === '/404') {\n                  if (!workerResult.isStatic && !workerResult.hasStaticProps) {\n                    throw new Error(\n                      `\\`pages/404\\` ${STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`\n                    )\n                  }\n                  // we need to ensure the 404 lambda is present since we use\n                  // it when _app has getInitialProps\n                  if (\n                    (await customAppGetInitialPropsPromise) &&\n                    !workerResult.hasStaticProps\n                  ) {\n                    staticPages.delete(page)\n                  }\n                }\n\n                if (\n                  STATIC_STATUS_PAGES.includes(page) &&\n                  !workerResult.isStatic &&\n                  !workerResult.hasStaticProps\n                ) {\n                  throw new Error(\n                    `\\`pages${page}\\` ${STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR}`\n                  )\n                }\n              } catch (err) {\n                if (err.message !== 'INVALID_DEFAULT_EXPORT') throw err\n                invalidPages.add(page)\n              }\n            }\n\n            pageInfos.set(page, {\n              size: selfSize,\n              totalSize: allSize,\n              static: isStatic,\n              isSsg,\n              isHybridAmp,\n              ssgPageRoutes,\n              initialRevalidateSeconds: false,\n              pageDuration: undefined,\n              ssgPageDurations: undefined,\n            })\n          })\n        })\n      )\n\n      const errorPageResult = await errorPageStaticResult\n      const nonStaticErrorPage =\n        (await errorPageHasCustomGetInitialProps) ||\n        (errorPageResult && errorPageResult.hasServerProps)\n\n      const returnValue = {\n        customAppGetInitialProps: await customAppGetInitialPropsPromise,\n        namedExports: await namedExportsPromise,\n        isNextImageImported,\n        hasSsrAmpPages,\n        hasNonStaticErrorPage: nonStaticErrorPage,\n      }\n\n      if (!sharedPool) staticWorkers.end()\n      return returnValue\n    })\n\n    if (customAppGetInitialProps) {\n      console.warn(\n        chalk.bold.yellow(`Warning: `) +\n          chalk.yellow(\n            `You have opted-out of Automatic Static Optimization due to \\`getInitialProps\\` in \\`pages/_app\\`. This does not opt-out pages with \\`getStaticProps\\``\n          )\n      )\n      console.warn(\n        'Read more: https://nextjs.org/docs/messages/opt-out-auto-static-optimization\\n'\n      )\n    }\n\n    if (!hasSsrAmpPages) {\n      requiredServerFiles.ignore.push(\n        path.relative(\n          dir,\n          path.join(\n            path.dirname(\n              require.resolve(\n                'next/dist/compiled/@ampproject/toolbox-optimizer'\n              )\n            ),\n            '**/*'\n          )\n        )\n      )\n    }\n\n    if (config.experimental.nftTracing) {\n      const globOrig =\n        require('next/dist/compiled/glob') as typeof import('next/dist/compiled/glob')\n      const glob = (pattern: string): Promise<string[]> => {\n        return new Promise((resolve, reject) => {\n          globOrig(pattern, { cwd: dir }, (err, files) => {\n            if (err) {\n              return reject(err)\n            }\n            resolve(files)\n          })\n        })\n      }\n\n      for (const page of pageKeys) {\n        const includeGlobs = pageTraceIncludes.get(page)\n        const excludeGlobs = pageTraceExcludes.get(page)\n\n        if (!includeGlobs?.length && !excludeGlobs?.length) {\n          continue\n        }\n\n        const traceFile = path.join(\n          distDir,\n          'server/pages',\n          `${page}.js.nft.json`\n        )\n        const traceContent = JSON.parse(\n          await promises.readFile(traceFile, 'utf8')\n        )\n        let includes: string[] = []\n        let excludes: string[] = []\n\n        if (includeGlobs?.length) {\n          for (const includeGlob of includeGlobs) {\n            includes.push(...(await glob(includeGlob)))\n          }\n        }\n\n        if (excludeGlobs?.length) {\n          for (const excludeGlob of excludeGlobs) {\n            excludes.push(...(await glob(excludeGlob)))\n          }\n        }\n\n        const combined = new Set([...traceContent.files, ...includes])\n        excludes.forEach((file) => combined.delete(file))\n\n        await promises.writeFile(\n          traceFile,\n          JSON.stringify({\n            version: traceContent.version,\n            files: [...combined],\n          })\n        )\n      }\n    }\n\n    if (serverPropsPages.size > 0 || ssgPages.size > 0) {\n      // We update the routes manifest after the build with the\n      // data routes since we can't determine these until after build\n      routesManifest.dataRoutes = getSortedRoutes([\n        ...serverPropsPages,\n        ...ssgPages,\n      ]).map((page) => {\n        const pagePath = normalizePagePath(page)\n        const dataRoute = path.posix.join(\n          '/_next/data',\n          buildId,\n          `${pagePath}.json`\n        )\n\n        let dataRouteRegex: string\n        let namedDataRouteRegex: string | undefined\n        let routeKeys: { [named: string]: string } | undefined\n\n        if (isDynamicRoute(page)) {\n          const routeRegex = getRouteRegex(dataRoute.replace(/\\.json$/, ''))\n\n          dataRouteRegex = normalizeRouteRegex(\n            routeRegex.re.source.replace(/\\(\\?:\\\\\\/\\)\\?\\$$/, '\\\\.json$')\n          )\n          namedDataRouteRegex = routeRegex.namedRegex!.replace(\n            /\\(\\?:\\/\\)\\?\\$$/,\n            '\\\\.json$'\n          )\n          routeKeys = routeRegex.routeKeys\n        } else {\n          dataRouteRegex = normalizeRouteRegex(\n            new RegExp(\n              `^${path.posix.join(\n                '/_next/data',\n                escapeStringRegexp(buildId),\n                `${pagePath}.json`\n              )}$`\n            ).source\n          )\n        }\n\n        return {\n          page,\n          routeKeys,\n          dataRouteRegex,\n          namedDataRouteRegex,\n        }\n      })\n\n      await promises.writeFile(\n        routesManifestPath,\n        JSON.stringify(routesManifest),\n        'utf8'\n      )\n    }\n\n    // Since custom _app.js can wrap the 404 page we have to opt-out of static optimization if it has getInitialProps\n    // Only export the static 404 when there is no /_error present\n    const useStatic404 =\n      !customAppGetInitialProps && (!hasNonStaticErrorPage || hasPages404)\n\n    if (invalidPages.size > 0) {\n      throw new Error(\n        `Build optimization failed: found page${\n          invalidPages.size === 1 ? '' : 's'\n        } without a React Component as default export in \\n${[...invalidPages]\n          .map((pg) => `pages${pg}`)\n          .join(\n            '\\n'\n          )}\\n\\nSee https://nextjs.org/docs/messages/page-without-valid-component for more info.\\n`\n      )\n    }\n\n    await writeBuildId(distDir, buildId)\n\n    if (config.experimental.optimizeCss) {\n      const cssFilePaths = getCssFilePaths(buildManifest)\n\n      requiredServerFiles.files.push(\n        ...cssFilePaths.map((filePath) => path.join(config.distDir, filePath))\n      )\n    }\n\n    await promises.writeFile(\n      path.join(distDir, SERVER_FILES_MANIFEST),\n      JSON.stringify(requiredServerFiles),\n      'utf8'\n    )\n\n    const finalPrerenderRoutes: { [route: string]: SsgRoute } = {}\n    const tbdPrerenderRoutes: string[] = []\n    let ssgNotFoundPaths: string[] = []\n\n    if (postCompileSpinner) postCompileSpinner.stopAndPersist()\n\n    const { i18n } = config\n\n    const usedStaticStatusPages = STATIC_STATUS_PAGES.filter(\n      (page) =>\n        mappedPages[page] && mappedPages[page].startsWith('private-next-pages')\n    )\n    usedStaticStatusPages.forEach((page) => {\n      if (!ssgPages.has(page) && !customAppGetInitialProps) {\n        staticPages.add(page)\n      }\n    })\n\n    const hasPages500 = usedStaticStatusPages.includes('/500')\n    const useDefaultStatic500 =\n      !hasPages500 && !hasNonStaticErrorPage && !customAppGetInitialProps\n\n    const combinedPages = [...staticPages, ...ssgPages]\n\n    if (combinedPages.length > 0 || useStatic404 || useDefaultStatic500) {\n      const staticGenerationSpan = nextBuildSpan.traceChild('static-generation')\n      await staticGenerationSpan.traceAsyncFn(async () => {\n        detectConflictingPaths(\n          [\n            ...combinedPages,\n            ...pageKeys.filter((page) => !combinedPages.includes(page)),\n          ],\n          ssgPages,\n          additionalSsgPaths\n        )\n        const exportApp: typeof import('../export').default =\n          require('../export').default\n        const exportOptions = {\n          silent: false,\n          buildExport: true,\n          threads: config.experimental.cpus,\n          pages: combinedPages,\n          outdir: path.join(distDir, 'export'),\n          statusMessage: 'Generating static pages',\n          exportPageWorker: sharedPool\n            ? staticWorkers.exportPage.bind(staticWorkers)\n            : undefined,\n          endWorker: sharedPool\n            ? async () => {\n                await staticWorkers.end()\n              }\n            : undefined,\n        }\n        const exportConfig: any = {\n          ...config,\n          initialPageRevalidationMap: {},\n          pageDurationMap: {},\n          ssgNotFoundPaths: [] as string[],\n          // Default map will be the collection of automatic statically exported\n          // pages and incremental pages.\n          // n.b. we cannot handle this above in combinedPages because the dynamic\n          // page must be in the `pages` array, but not in the mapping.\n          exportPathMap: (defaultMap: any) => {\n            // Dynamically routed pages should be prerendered to be used as\n            // a client-side skeleton (fallback) while data is being fetched.\n            // This ensures the end-user never sees a 500 or slow response from the\n            // server.\n            //\n            // Note: prerendering disables automatic static optimization.\n            ssgPages.forEach((page) => {\n              if (isDynamicRoute(page)) {\n                tbdPrerenderRoutes.push(page)\n\n                if (ssgStaticFallbackPages.has(page)) {\n                  // Override the rendering for the dynamic page to be treated as a\n                  // fallback render.\n                  if (i18n) {\n                    defaultMap[`/${i18n.defaultLocale}${page}`] = {\n                      page,\n                      query: { __nextFallback: true },\n                    }\n                  } else {\n                    defaultMap[page] = { page, query: { __nextFallback: true } }\n                  }\n                } else {\n                  // Remove dynamically routed pages from the default path map when\n                  // fallback behavior is disabled.\n                  delete defaultMap[page]\n                }\n              }\n            })\n            // Append the \"well-known\" routes we should prerender for, e.g. blog\n            // post slugs.\n            additionalSsgPaths.forEach((routes, page) => {\n              const encodedRoutes = additionalSsgPathsEncoded.get(page)\n\n              routes.forEach((route, routeIdx) => {\n                defaultMap[route] = {\n                  page,\n                  query: { __nextSsgPath: encodedRoutes?.[routeIdx] },\n                }\n              })\n            })\n\n            if (useStatic404) {\n              defaultMap['/404'] = {\n                page: hasPages404 ? '/404' : '/_error',\n              }\n            }\n\n            if (useDefaultStatic500) {\n              defaultMap['/500'] = {\n                page: '/_error',\n              }\n            }\n\n            if (i18n) {\n              for (const page of [\n                ...staticPages,\n                ...ssgPages,\n                ...(useStatic404 ? ['/404'] : []),\n                ...(useDefaultStatic500 ? ['/500'] : []),\n              ]) {\n                const isSsg = ssgPages.has(page)\n                const isDynamic = isDynamicRoute(page)\n                const isFallback = isSsg && ssgStaticFallbackPages.has(page)\n\n                for (const locale of i18n.locales) {\n                  // skip fallback generation for SSG pages without fallback mode\n                  if (isSsg && isDynamic && !isFallback) continue\n                  const outputPath = `/${locale}${page === '/' ? '' : page}`\n\n                  defaultMap[outputPath] = {\n                    page: defaultMap[page]?.page || page,\n                    query: { __nextLocale: locale },\n                  }\n\n                  if (isFallback) {\n                    defaultMap[outputPath].query.__nextFallback = true\n                  }\n                }\n\n                if (isSsg) {\n                  // remove non-locale prefixed variant from defaultMap\n                  delete defaultMap[page]\n                }\n              }\n            }\n            return defaultMap\n          },\n        }\n\n        await exportApp(dir, exportOptions, exportConfig)\n\n        const postBuildSpinner = createSpinner({\n          prefixText: `${Log.prefixes.info} Finalizing page optimization`,\n        })\n        ssgNotFoundPaths = exportConfig.ssgNotFoundPaths\n\n        // remove server bundles that were exported\n        for (const page of staticPages) {\n          const serverBundle = getPagePath(page, distDir, isLikeServerless)\n          await promises.unlink(serverBundle)\n        }\n        const serverOutputDir = path.join(\n          distDir,\n          isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n        )\n\n        const moveExportedPage = async (\n          originPage: string,\n          page: string,\n          file: string,\n          isSsg: boolean,\n          ext: 'html' | 'json',\n          additionalSsgFile = false\n        ) => {\n          return staticGenerationSpan\n            .traceChild('move-exported-page')\n            .traceAsyncFn(async () => {\n              file = `${file}.${ext}`\n              const orig = path.join(exportOptions.outdir, file)\n              const pagePath = getPagePath(\n                originPage,\n                distDir,\n                isLikeServerless\n              )\n\n              const relativeDest = path\n                .relative(\n                  serverOutputDir,\n                  path.join(\n                    path.join(\n                      pagePath,\n                      // strip leading / and then recurse number of nested dirs\n                      // to place from base folder\n                      originPage\n                        .substr(1)\n                        .split('/')\n                        .map(() => '..')\n                        .join('/')\n                    ),\n                    file\n                  )\n                )\n                .replace(/\\\\/g, '/')\n\n              const dest = path.join(\n                distDir,\n                isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                relativeDest\n              )\n\n              if (\n                !isSsg &&\n                !(\n                  // don't add static status page to manifest if it's\n                  // the default generated version e.g. no pages/500\n                  (\n                    STATIC_STATUS_PAGES.includes(page) &&\n                    !usedStaticStatusPages.includes(page)\n                  )\n                )\n              ) {\n                pagesManifest[page] = relativeDest\n              }\n\n              const isNotFound = ssgNotFoundPaths.includes(page)\n\n              // for SSG files with i18n the non-prerendered variants are\n              // output with the locale prefixed so don't attempt moving\n              // without the prefix\n              if ((!i18n || additionalSsgFile) && !isNotFound) {\n                await promises.mkdir(path.dirname(dest), { recursive: true })\n                await promises.rename(orig, dest)\n              } else if (i18n && !isSsg) {\n                // this will be updated with the locale prefixed variant\n                // since all files are output with the locale prefix\n                delete pagesManifest[page]\n              }\n\n              if (i18n) {\n                if (additionalSsgFile) return\n\n                for (const locale of i18n.locales) {\n                  const curPath = `/${locale}${page === '/' ? '' : page}`\n                  const localeExt = page === '/' ? path.extname(file) : ''\n                  const relativeDestNoPages = relativeDest.substr(\n                    'pages/'.length\n                  )\n\n                  if (isSsg && ssgNotFoundPaths.includes(curPath)) {\n                    continue\n                  }\n\n                  const updatedRelativeDest = path\n                    .join(\n                      'pages',\n                      locale + localeExt,\n                      // if it's the top-most index page we want it to be locale.EXT\n                      // instead of locale/index.html\n                      page === '/' ? '' : relativeDestNoPages\n                    )\n                    .replace(/\\\\/g, '/')\n\n                  const updatedOrig = path.join(\n                    exportOptions.outdir,\n                    locale + localeExt,\n                    page === '/' ? '' : file\n                  )\n                  const updatedDest = path.join(\n                    distDir,\n                    isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n                    updatedRelativeDest\n                  )\n\n                  if (!isSsg) {\n                    pagesManifest[curPath] = updatedRelativeDest\n                  }\n                  await promises.mkdir(path.dirname(updatedDest), {\n                    recursive: true,\n                  })\n                  await promises.rename(updatedOrig, updatedDest)\n                }\n              }\n            })\n        }\n\n        // Only move /404 to /404 when there is no custom 404 as in that case we don't know about the 404 page\n        if (!hasPages404 && useStatic404) {\n          await moveExportedPage('/_error', '/404', '/404', false, 'html')\n        }\n\n        if (useDefaultStatic500) {\n          await moveExportedPage('/_error', '/500', '/500', false, 'html')\n        }\n\n        for (const page of combinedPages) {\n          const isSsg = ssgPages.has(page)\n          const isStaticSsgFallback = ssgStaticFallbackPages.has(page)\n          const isDynamic = isDynamicRoute(page)\n          const hasAmp = hybridAmpPages.has(page)\n          const file = normalizePagePath(page)\n\n          const pageInfo = pageInfos.get(page)\n          const durationInfo = exportConfig.pageDurationMap[page]\n          if (pageInfo && durationInfo) {\n            // Set Build Duration\n            if (pageInfo.ssgPageRoutes) {\n              pageInfo.ssgPageDurations = pageInfo.ssgPageRoutes.map(\n                (pagePath) => durationInfo[pagePath]\n              )\n            }\n            pageInfo.pageDuration = durationInfo[page]\n          }\n\n          // The dynamic version of SSG pages are only prerendered if the\n          // fallback is enabled. Below, we handle the specific prerenders\n          // of these.\n          const hasHtmlOutput = !(isSsg && isDynamic && !isStaticSsgFallback)\n\n          if (hasHtmlOutput) {\n            await moveExportedPage(page, page, file, isSsg, 'html')\n          }\n\n          if (hasAmp && (!isSsg || (isSsg && !isDynamic))) {\n            const ampPage = `${file}.amp`\n            await moveExportedPage(page, ampPage, ampPage, isSsg, 'html')\n\n            if (isSsg) {\n              await moveExportedPage(page, ampPage, ampPage, isSsg, 'json')\n            }\n          }\n\n          if (isSsg) {\n            // For a non-dynamic SSG page, we must copy its data file\n            // from export, we already moved the HTML file above\n            if (!isDynamic) {\n              await moveExportedPage(page, page, file, isSsg, 'json')\n\n              if (i18n) {\n                // TODO: do we want to show all locale variants in build output\n                for (const locale of i18n.locales) {\n                  const localePage = `/${locale}${page === '/' ? '' : page}`\n\n                  if (!ssgNotFoundPaths.includes(localePage)) {\n                    finalPrerenderRoutes[localePage] = {\n                      initialRevalidateSeconds:\n                        exportConfig.initialPageRevalidationMap[localePage],\n                      srcRoute: null,\n                      dataRoute: path.posix.join(\n                        '/_next/data',\n                        buildId,\n                        `${file}.json`\n                      ),\n                    }\n                  }\n                }\n              } else {\n                finalPrerenderRoutes[page] = {\n                  initialRevalidateSeconds:\n                    exportConfig.initialPageRevalidationMap[page],\n                  srcRoute: null,\n                  dataRoute: path.posix.join(\n                    '/_next/data',\n                    buildId,\n                    `${file}.json`\n                  ),\n                }\n              }\n              // Set Page Revalidation Interval\n              if (pageInfo) {\n                pageInfo.initialRevalidateSeconds =\n                  exportConfig.initialPageRevalidationMap[page]\n              }\n            } else {\n              // For a dynamic SSG page, we did not copy its data exports and only\n              // copy the fallback HTML file (if present).\n              // We must also copy specific versions of this page as defined by\n              // `getStaticPaths` (additionalSsgPaths).\n              const extraRoutes = additionalSsgPaths.get(page) || []\n              for (const route of extraRoutes) {\n                const pageFile = normalizePagePath(route)\n                await moveExportedPage(\n                  page,\n                  route,\n                  pageFile,\n                  isSsg,\n                  'html',\n                  true\n                )\n                await moveExportedPage(\n                  page,\n                  route,\n                  pageFile,\n                  isSsg,\n                  'json',\n                  true\n                )\n\n                if (hasAmp) {\n                  const ampPage = `${pageFile}.amp`\n                  await moveExportedPage(\n                    page,\n                    ampPage,\n                    ampPage,\n                    isSsg,\n                    'html',\n                    true\n                  )\n                  await moveExportedPage(\n                    page,\n                    ampPage,\n                    ampPage,\n                    isSsg,\n                    'json',\n                    true\n                  )\n                }\n\n                finalPrerenderRoutes[route] = {\n                  initialRevalidateSeconds:\n                    exportConfig.initialPageRevalidationMap[route],\n                  srcRoute: page,\n                  dataRoute: path.posix.join(\n                    '/_next/data',\n                    buildId,\n                    `${normalizePagePath(route)}.json`\n                  ),\n                }\n\n                // Set route Revalidation Interval\n                if (pageInfo) {\n                  pageInfo.initialRevalidateSeconds =\n                    exportConfig.initialPageRevalidationMap[route]\n                }\n              }\n            }\n          }\n        }\n\n        // remove temporary export folder\n        await recursiveDelete(exportOptions.outdir)\n        await promises.rmdir(exportOptions.outdir)\n        await promises.writeFile(\n          manifestPath,\n          JSON.stringify(pagesManifest, null, 2),\n          'utf8'\n        )\n\n        if (postBuildSpinner) postBuildSpinner.stopAndPersist()\n        console.log()\n      })\n    }\n\n    const analysisEnd = process.hrtime(analysisBegin)\n    telemetry.record(\n      eventBuildOptimize(pagePaths, {\n        durationInSeconds: analysisEnd[0],\n        staticPageCount: staticPages.size,\n        staticPropsPageCount: ssgPages.size,\n        serverPropsPageCount: serverPropsPages.size,\n        ssrPageCount:\n          pagePaths.length -\n          (staticPages.size + ssgPages.size + serverPropsPages.size),\n        hasStatic404: useStatic404,\n        hasReportWebVitals: namedExports?.includes('reportWebVitals') ?? false,\n        rewritesCount: combinedRewrites.length,\n        headersCount: headers.length,\n        redirectsCount: redirects.length - 1, // reduce one for trailing slash\n        headersWithHasCount: headers.filter((r: any) => !!r.has).length,\n        rewritesWithHasCount: combinedRewrites.filter((r: any) => !!r.has)\n          .length,\n        redirectsWithHasCount: redirects.filter((r: any) => !!r.has).length,\n      })\n    )\n\n    if (ssgPages.size > 0) {\n      const finalDynamicRoutes: PrerenderManifest['dynamicRoutes'] = {}\n      tbdPrerenderRoutes.forEach((tbdRoute) => {\n        const normalizedRoute = normalizePagePath(tbdRoute)\n        const dataRoute = path.posix.join(\n          '/_next/data',\n          buildId,\n          `${normalizedRoute}.json`\n        )\n\n        finalDynamicRoutes[tbdRoute] = {\n          routeRegex: normalizeRouteRegex(getRouteRegex(tbdRoute).re.source),\n          dataRoute,\n          fallback: ssgBlockingFallbackPages.has(tbdRoute)\n            ? null\n            : ssgStaticFallbackPages.has(tbdRoute)\n            ? `${normalizedRoute}.html`\n            : false,\n          dataRouteRegex: normalizeRouteRegex(\n            getRouteRegex(dataRoute.replace(/\\.json$/, '')).re.source.replace(\n              /\\(\\?:\\\\\\/\\)\\?\\$$/,\n              '\\\\.json$'\n            )\n          ),\n        }\n      })\n      const prerenderManifest: PrerenderManifest = {\n        version: 3,\n        routes: finalPrerenderRoutes,\n        dynamicRoutes: finalDynamicRoutes,\n        notFoundRoutes: ssgNotFoundPaths,\n        preview: previewProps,\n      }\n\n      await promises.writeFile(\n        path.join(distDir, PRERENDER_MANIFEST),\n        JSON.stringify(prerenderManifest),\n        'utf8'\n      )\n      await generateClientSsgManifest(prerenderManifest, {\n        distDir,\n        buildId,\n        locales: config.i18n?.locales || [],\n      })\n    } else {\n      const prerenderManifest: PrerenderManifest = {\n        version: 3,\n        routes: {},\n        dynamicRoutes: {},\n        preview: previewProps,\n        notFoundRoutes: [],\n      }\n      await promises.writeFile(\n        path.join(distDir, PRERENDER_MANIFEST),\n        JSON.stringify(prerenderManifest),\n        'utf8'\n      )\n    }\n\n    const images = { ...config.images }\n    const { deviceSizes, imageSizes } = images\n    ;(images as any).sizes = [...deviceSizes, ...imageSizes]\n\n    await promises.writeFile(\n      path.join(distDir, IMAGES_MANIFEST),\n      JSON.stringify({\n        version: 1,\n        images,\n      }),\n      'utf8'\n    )\n    await promises.writeFile(\n      path.join(distDir, EXPORT_MARKER),\n      JSON.stringify({\n        version: 1,\n        hasExportPathMap: typeof config.exportPathMap === 'function',\n        exportTrailingSlash: config.trailingSlash === true,\n        isNextImageImported: isNextImageImported === true,\n      }),\n      'utf8'\n    )\n    await promises.unlink(path.join(distDir, EXPORT_DETAIL)).catch((err) => {\n      if (err.code === 'ENOENT') {\n        return Promise.resolve()\n      }\n      return Promise.reject(err)\n    })\n\n    staticPages.forEach((pg) => allStaticPages.add(pg))\n    pageInfos.forEach((info: PageInfo, key: string) => {\n      allPageInfos.set(key, info)\n    })\n\n    await nextBuildSpan.traceChild('print-tree-view').traceAsyncFn(() =>\n      printTreeView(Object.keys(mappedPages), allPageInfos, isLikeServerless, {\n        distPath: distDir,\n        buildId: buildId,\n        pagesDir,\n        useStatic404,\n        pageExtensions: config.pageExtensions,\n        buildManifest,\n        gzipSize: config.experimental.gzipSize,\n      })\n    )\n\n    if (debugOutput) {\n      nextBuildSpan\n        .traceChild('print-custom-routes')\n        .traceFn(() => printCustomRoutes({ redirects, rewrites, headers }))\n    }\n\n    if (config.analyticsId) {\n      console.log(\n        chalk.bold.green('Next.js Analytics') +\n          ' is enabled for this production build. ' +\n          \"You'll receive a Real Experience Score computed by all of your visitors.\"\n      )\n      console.log('')\n    }\n\n    await nextBuildSpan\n      .traceChild('telemetry-flush')\n      .traceAsyncFn(() => telemetry.flush())\n  })\n\n  // Ensure all traces are flushed before finishing the command\n  await flushAllTraces()\n\n  return buildResult\n}\n\nexport type ClientSsgManifest = Set<string>\n\nfunction generateClientSsgManifest(\n  prerenderManifest: PrerenderManifest,\n  {\n    buildId,\n    distDir,\n    locales,\n  }: { buildId: string; distDir: string; locales: string[] }\n) {\n  const ssgPages: ClientSsgManifest = new Set<string>([\n    ...Object.entries(prerenderManifest.routes)\n      // Filter out dynamic routes\n      .filter(([, { srcRoute }]) => srcRoute == null)\n      .map(([route]) => normalizeLocalePath(route, locales).pathname),\n    ...Object.keys(prerenderManifest.dynamicRoutes),\n  ])\n\n  const clientSsgManifestContent = `self.__SSG_MANIFEST=${devalue(\n    ssgPages\n  )};self.__SSG_MANIFEST_CB&&self.__SSG_MANIFEST_CB()`\n\n  writeFileSync(\n    path.join(distDir, CLIENT_STATIC_FILES_PATH, buildId, '_ssgManifest.js'),\n    clientSsgManifestContent\n  )\n}\n"],"names":[],"mappings":"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"}