{"version":3,"sources":["../../../../build/webpack/plugins/copy-file-plugin.ts"],"sourcesContent":["import { promises as fs } from 'fs'\nimport loaderUtils from 'next/dist/compiled/loader-utils'\nimport {\n  isWebpack5,\n  sources,\n  webpack,\n} from 'next/dist/compiled/webpack/webpack'\n\nconst PLUGIN_NAME = 'CopyFilePlugin'\n\nexport class CopyFilePlugin {\n  private filePath: string\n  private name: string\n  private cacheKey: string\n  private info?: object\n\n  constructor({\n    filePath,\n    cacheKey,\n    name,\n    info,\n  }: {\n    filePath: string\n    cacheKey: string\n    name: string\n    minimize: boolean\n    info?: object\n  }) {\n    this.filePath = filePath\n    this.cacheKey = cacheKey\n    this.name = name\n    this.info = info\n  }\n\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.thisCompilation.tap(PLUGIN_NAME, (compilation: any) => {\n      const cache = isWebpack5 ? compilation.getCache('CopyFilePlugin') : null\n      const hook = isWebpack5\n        ? // @ts-ignore\n          compilation.hooks.processAssets\n        : compilation.hooks.additionalAssets\n      hook.tapPromise(\n        isWebpack5\n          ? {\n              name: PLUGIN_NAME,\n              // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n              stage: webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS,\n            }\n          : PLUGIN_NAME,\n        async () => {\n          if (cache) {\n            const cachedResult = await cache.getPromise(\n              this.filePath,\n              this.cacheKey\n            )\n            if (cachedResult) {\n              const { file, source } = cachedResult\n              compilation.emitAsset(file, source, {\n                ...this.info,\n              })\n              return\n            }\n          }\n          const content = await fs.readFile(this.filePath, 'utf8')\n\n          const file = loaderUtils.interpolateName(\n            { resourcePath: this.filePath },\n            this.name,\n            { content, context: compiler.context }\n          )\n\n          const source = new sources.RawSource(content)\n\n          if (cache) {\n            await cache.storePromise(this.filePath, this.cacheKey, {\n              file,\n              source,\n            })\n          }\n\n          // @ts-ignore\n          compilation.emitAsset(file, source, {\n            ...this.info,\n          })\n        }\n      )\n    })\n  }\n}\n"],"names":[],"mappings":";;;;AAA+B,GAAI,CAAJ,GAAI;AACX,GAAiC,CAAjC,YAAiC;AAKlD,GAAoC,CAApC,QAAoC;;;;;;AAE3C,KAAK,CAAC,WAAW,IAAG,cAAgB;MAEvB,cAAc;kBAOvB,QAAQ,GACR,QAAQ,GACR,IAAI,GACJ,IAAI,IAOH,CAAC;aACG,QAAQ,GAAG,QAAQ;aACnB,QAAQ,GAAG,QAAQ;aACnB,IAAI,GAAG,IAAI;aACX,IAAI,GAAG,IAAI;IAClB,CAAC;IAED,KAAK,CAAC,QAA0B,EAAE,CAAC;QACjC,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,GAAG,WAAgB,GAAK,CAAC;YACrE,KAAK,CAAC,KAAK,GA9BV,QAAoC,cA8BV,WAAW,CAAC,QAAQ,EAAC,cAAgB,KAAI,IAAI;YACxE,KAAK,CAAC,IAAI,GA/BT,QAAoC,cAiCjC,WAAW,CAAC,KAAK,CAAC,aAAa,GAC/B,WAAW,CAAC,KAAK,CAAC,gBAAgB;YACtC,IAAI,CAAC,UAAU,CAnCd,QAAoC;gBAsC7B,IAAI,EAAE,WAAW;gBACjB,EAA0D,AAA1D,wDAA0D;gBAC1D,KAAK,EAxCZ,QAAoC,SAwCd,WAAW,CAAC,8BAA8B;gBAE3D,WAAW,YACH,CAAC;gBACX,EAAE,EAAE,KAAK,EAAE,CAAC;oBACV,KAAK,CAAC,YAAY,SAAS,KAAK,CAAC,UAAU,MACpC,QAAQ,OACR,QAAQ;oBAEf,EAAE,EAAE,YAAY,EAAE,CAAC;wBACjB,KAAK,GAAG,IAAI,GAAE,MAAM,MAAK,YAAY;wBACrC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM;oCACxB,IAAI;;;oBAGhB,CAAC;gBACH,CAAC;gBACD,KAAK,CAAC,OAAO,SA/DQ,GAAI,UA+DA,QAAQ,MAAM,QAAQ,GAAE,IAAM;gBAEvD,KAAK,CAAC,IAAI,GAhEI,YAAiC,SAgEtB,eAAe;oBACpC,YAAY,OAAO,QAAQ;wBACxB,IAAI;oBACP,OAAO;oBAAE,OAAO,EAAE,QAAQ,CAAC,OAAO;;gBAGtC,KAAK,CAAC,MAAM,GAAG,GAAG,CAjErB,QAAoC,SAiEN,SAAS,CAAC,OAAO;gBAE5C,EAAE,EAAE,KAAK,EAAE,CAAC;0BACJ,KAAK,CAAC,YAAY,MAAM,QAAQ,OAAO,QAAQ;wBACnD,IAAI;wBACJ,MAAM;;gBAEV,CAAC;gBAED,EAAa,AAAb,WAAa;gBACb,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM;4BACxB,IAAI;;YAEhB,CAAC;QAEL,CAAC;IACH,CAAC;;QA7EU,cAAc,GAAd,cAAc"}