{"version":3,"sources":["../../../../../../build/webpack/plugins/webpack-conformance-plugin/checks/duplicate-polyfills-conformance-check.ts"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { namedTypes } from 'ast-types'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { NodePath } from 'ast-types/lib/node-path'\nimport { types } from 'next/dist/compiled/recast'\nimport {\n  CONFORMANCE_ERROR_PREFIX,\n  CONFORMANCE_WARNING_PREFIX,\n} from '../constants'\nimport {\n  IConformanceTestResult,\n  IConformanceTestStatus,\n  IGetAstNodeResult,\n  IParsedModuleDetails,\n  IWebpackConformanceTest,\n} from '../TestInterface'\nimport {\n  isNodeCreatingScriptElement,\n  reducePropsToObject,\n} from '../utils/ast-utils'\nimport { getLocalFileName } from '../utils/file-utils'\n\nfunction getMessage(\n  property: string,\n  request: string,\n  isWarning: Boolean = false\n): string {\n  if (isWarning) {\n    return `${CONFORMANCE_WARNING_PREFIX}: Found a ${property} polyfill in ${getLocalFileName(\n      request\n    )}.`\n  }\n  return `${CONFORMANCE_ERROR_PREFIX}: Found a ${property} polyfill in ${getLocalFileName(\n    request\n  )}.`\n}\n\nexport interface DuplicatePolyfillsConformanceTestSettings {\n  BlockedAPIToBePolyfilled?: string[]\n}\n\nconst BANNED_LEFT_OBJECT_TYPES = ['Identifier', 'ThisExpression']\n\nexport class DuplicatePolyfillsConformanceCheck\n  implements IWebpackConformanceTest\n{\n  private BlockedAPIs: string[] = []\n  constructor(options: DuplicatePolyfillsConformanceTestSettings = {}) {\n    this.BlockedAPIs = options.BlockedAPIToBePolyfilled || []\n  }\n  public getAstNode(): IGetAstNodeResult[] {\n    const EARLY_EXIT_SUCCESS_RESULT: IConformanceTestResult = {\n      result: IConformanceTestStatus.SUCCESS,\n    }\n    return [\n      {\n        visitor: 'visitAssignmentExpression',\n        inspectNode: (\n          path: NodePath<namedTypes.AssignmentExpression>,\n          { request }: IParsedModuleDetails\n        ): IConformanceTestResult => {\n          const { node } = path\n          const left = node.left as namedTypes.MemberExpression\n          /**\n           * We're only interested in code like `foo.fetch = bar;`.\n           * For anything else we exit with a success.\n           * Also foo in foo.bar needs to be either Identifier or `this` and not someFunction().fetch;\n           */\n          if (\n            left.type !== 'MemberExpression' ||\n            !BANNED_LEFT_OBJECT_TYPES.includes(left.object.type) ||\n            left.property.type !== 'Identifier'\n          ) {\n            return EARLY_EXIT_SUCCESS_RESULT\n          }\n          if (!this.BlockedAPIs.includes(left.property.name)) {\n            return EARLY_EXIT_SUCCESS_RESULT\n          }\n          /**\n           * Here we know the code is `foo.(fetch/URL) = something.\n           * If foo === this/self, fail it immediately.\n           * check for this.[fetch|URL(...BlockedAPIs)]/ self.[fetch|URL(...BlockedAPIs)]\n           **/\n          if (isNodeThisOrSelf(left.object)) {\n            return {\n              result: IConformanceTestStatus.FAILED,\n              warnings: [\n                {\n                  message: getMessage(left.property.name, request),\n                },\n              ],\n            }\n          }\n          /**\n           * we now are sure the code under examination is\n           * `globalVar.[fetch|URL(...BlockedAPIs)] = something`\n           **/\n          const objectName = (left.object as namedTypes.Identifier).name\n          const allBindings = path.scope.lookup(objectName)\n          if (!allBindings) {\n            /**\n             * we have absolutely no idea where globalVar came from,\n             * so lets just exit\n             **/\n            return EARLY_EXIT_SUCCESS_RESULT\n          }\n\n          try {\n            const sourcePath = allBindings.bindings[objectName][0]\n            const originPath = sourcePath.parentPath\n            const {\n              node: originNode,\n            }: { node: namedTypes.VariableDeclarator } = originPath\n            if (\n              originNode.type === 'VariableDeclarator' &&\n              isNodeThisOrSelf(originNode.init)\n            ) {\n              return {\n                result: IConformanceTestStatus.FAILED,\n                warnings: [\n                  {\n                    message: getMessage(left.property.name, request),\n                  },\n                ],\n              }\n            }\n            if (\n              originPath.name === 'params' &&\n              originPath.parentPath.firstInStatement()\n            ) {\n              /**\n               * We do not know what will be the value of this param at runtime so we just throw a warning.\n               * ```\n               * (function(scope){\n               *  ....\n               *  scope.fetch = new Fetch();\n               * })(.....)\n               * ```\n               */\n              return {\n                result: IConformanceTestStatus.FAILED,\n                warnings: [\n                  {\n                    message: getMessage(left.property.name, request, true),\n                  },\n                ],\n              }\n            }\n          } catch (e) {\n            return EARLY_EXIT_SUCCESS_RESULT\n          }\n\n          return EARLY_EXIT_SUCCESS_RESULT\n        },\n      },\n      {\n        visitor: 'visitCallExpression',\n        inspectNode: (path: NodePath) => {\n          const { node }: { node: types.namedTypes.CallExpression } = path\n          if (!node.arguments || node.arguments.length < 2) {\n            return EARLY_EXIT_SUCCESS_RESULT\n          }\n          if (isNodeCreatingScriptElement(node)) {\n            const propsNode = node\n              .arguments[1] as types.namedTypes.ObjectExpression\n            if (!propsNode.properties) {\n              return EARLY_EXIT_SUCCESS_RESULT\n            }\n            const props: {\n              [key: string]: string\n            } = reducePropsToObject(propsNode)\n            if (!('src' in props)) {\n              return EARLY_EXIT_SUCCESS_RESULT\n            }\n            const foundBannedPolyfill = doesScriptLoadBannedAPIfromPolyfillIO(\n              props.src,\n              this.BlockedAPIs\n            )\n            if (foundBannedPolyfill) {\n              return {\n                result: IConformanceTestStatus.FAILED,\n                warnings: [\n                  {\n                    message: `${CONFORMANCE_WARNING_PREFIX}: Found polyfill.io loading polyfill for ${foundBannedPolyfill}.`,\n                  },\n                ],\n              }\n            }\n          }\n          return EARLY_EXIT_SUCCESS_RESULT\n        },\n      },\n    ]\n  }\n}\n\nfunction isNodeThisOrSelf(node: any): boolean {\n  return (\n    node.type === 'ThisExpression' ||\n    (node.type === 'Identifier' && node.name === 'self')\n  )\n}\n\nfunction doesScriptLoadBannedAPIfromPolyfillIO(\n  source: string,\n  blockedAPIs: string[]\n): string | undefined {\n  const url = new URL(source)\n  if (url.hostname === 'polyfill.io' && url.searchParams.has('features')) {\n    const requestedAPIs = (url.searchParams.get('features') || '').split(',')\n    return blockedAPIs.find((api) => requestedAPIs.includes(api))\n  }\n}\n"],"names":[],"mappings":"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"}