{"version":3,"sources":["../../../../../build/webpack/plugins/webpack-conformance-plugin/index.ts"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { NodePath } from 'ast-types/lib/node-path'\nimport { visit } from 'next/dist/compiled/recast'\nimport { webpack } from 'next/dist/compiled/webpack/webpack'\nimport {\n  IConformanceAnomaly,\n  IConformanceTestResult,\n  IConformanceTestStatus,\n  IGetAstNodeResult,\n  IWebpackConformanceTest,\n  NodeInspector,\n} from './TestInterface'\n\nexport { DuplicatePolyfillsConformanceCheck } from './checks/duplicate-polyfills-conformance-check'\nexport { GranularChunksConformanceCheck } from './checks/granular-chunks-conformance'\nexport { MinificationConformanceCheck } from './checks/minification-conformance-check'\nexport { ReactSyncScriptsConformanceCheck } from './checks/react-sync-scripts-conformance-check'\n\nexport interface IWebpackConformancePluginOptions {\n  tests: IWebpackConformanceTest[]\n}\n\ninterface VisitorMap {\n  [key: string]: (path: NodePath) => void\n}\n\nexport default class WebpackConformancePlugin {\n  private tests: IWebpackConformanceTest[]\n  private errors: Array<IConformanceAnomaly>\n  private warnings: Array<IConformanceAnomaly>\n  private compiler?: webpack.Compiler\n\n  constructor(options: IWebpackConformancePluginOptions) {\n    this.tests = []\n    if (options.tests) {\n      this.tests.push(...options.tests)\n    }\n    this.errors = []\n    this.warnings = []\n  }\n\n  private gatherResults(results: Array<IConformanceTestResult>): void {\n    results.forEach((result) => {\n      if (result.result === IConformanceTestStatus.FAILED) {\n        result.errors && this.errors.push(...result.errors)\n        result.warnings && this.warnings.push(...result.warnings)\n      }\n    })\n  }\n\n  private buildStartedHandler = (\n    _compilation: webpack.compilation.Compilation,\n    callback: () => void\n  ) => {\n    const buildStartedResults: IConformanceTestResult[] = this.tests.map(\n      (test) => {\n        if (test.buildStared && this.compiler) {\n          return test.buildStared(this.compiler.options)\n        }\n        return {\n          result: IConformanceTestStatus.SUCCESS,\n        } as IConformanceTestResult\n      }\n    )\n\n    this.gatherResults(buildStartedResults)\n    callback()\n  }\n\n  private buildCompletedHandler = (\n    compilation: webpack.compilation.Compilation,\n    cb: () => void\n  ): void => {\n    const buildCompletedResults: IConformanceTestResult[] = this.tests.map(\n      (test) => {\n        if (test.buildCompleted) {\n          return test.buildCompleted(compilation.assets)\n        }\n        return {\n          result: IConformanceTestStatus.SUCCESS,\n        } as IConformanceTestResult\n      }\n    )\n\n    this.gatherResults(buildCompletedResults)\n    compilation.errors.push(...this.errors)\n    compilation.warnings.push(...this.warnings)\n    cb()\n  }\n\n  private parserHandler = (\n    factory: webpack.compilation.NormalModuleFactory\n  ): void => {\n    const JS_TYPES = ['auto', 'esm', 'dynamic']\n    const collectedVisitors: Map<string, [NodeInspector?]> = new Map()\n    // Collect all interested visitors from all tests.\n    this.tests.forEach((test) => {\n      if (test.getAstNode) {\n        const getAstNodeCallbacks: IGetAstNodeResult[] = test.getAstNode()\n        getAstNodeCallbacks.forEach((result) => {\n          if (!collectedVisitors.has(result.visitor)) {\n            collectedVisitors.set(result.visitor, [])\n          }\n          ;(collectedVisitors.get(result.visitor) as NodeInspector[]).push(\n            result.inspectNode\n          )\n        })\n      }\n    })\n\n    // Do an extra walk per module and add interested visitors to the walk.\n    for (const type of JS_TYPES) {\n      factory.hooks.parser\n        .for('javascript/' + type)\n        .tap(this.constructor.name, (parser: any) => {\n          parser.hooks.program.tap(this.constructor.name, (ast: any) => {\n            const visitors: VisitorMap = {}\n            const that = this\n            for (const visitorKey of collectedVisitors.keys()) {\n              visitors[visitorKey] = function (path: NodePath) {\n                const callbacks = collectedVisitors.get(visitorKey) || []\n                callbacks.forEach((cb) => {\n                  if (!cb) {\n                    return\n                  }\n                  const { request } = parser.state.module\n                  const outcome = cb(path, { request })\n                  that.gatherResults([outcome])\n                })\n                this.traverse(path)\n                return false\n              }\n            }\n            visit(ast, visitors)\n          })\n        })\n    }\n  }\n\n  public apply(compiler: webpack.Compiler) {\n    this.compiler = compiler\n    compiler.hooks.make.tapAsync(\n      this.constructor.name,\n      this.buildStartedHandler\n    )\n    compiler.hooks.emit.tapAsync(\n      this.constructor.name,\n      this.buildCompletedHandler\n    )\n    compiler.hooks.normalModuleFactory.tap(\n      this.constructor.name,\n      this.parserHandler\n    )\n  }\n}\n"],"names":[],"mappings":"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"}