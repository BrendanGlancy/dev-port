{"version":3,"sources":["../../../../../build/webpack/config/blocks/base.ts"],"sourcesContent":["import isWslBoolean from 'next/dist/compiled/is-wsl'\nimport curry from 'next/dist/compiled/lodash.curry'\nimport { webpack, isWebpack5 } from 'next/dist/compiled/webpack/webpack'\nimport { ConfigurationContext } from '../utils'\n\nconst isWindows = process.platform === 'win32' || isWslBoolean\n\nexport const base = curry(function base(\n  ctx: ConfigurationContext,\n  config: webpack.Configuration\n) {\n  config.mode = ctx.isDevelopment ? 'development' : 'production'\n  config.name = ctx.isServer ? 'server' : 'client'\n  if (isWebpack5) {\n    // @ts-ignore TODO webpack 5 typings\n    config.target = ctx.isServer ? 'node12.17' : ['web', 'es5']\n  } else {\n    config.target = ctx.isServer ? 'node' : 'web'\n  }\n\n  // Stop compilation early in a production build when an error is encountered.\n  // This behavior isn't desirable in development due to how the HMR system\n  // works, but is a good default for production.\n  config.bail = ctx.isProduction\n\n  // https://webpack.js.org/configuration/devtool/#development\n  if (ctx.isDevelopment) {\n    if (process.env.__NEXT_TEST_MODE && !process.env.__NEXT_TEST_WITH_DEVTOOL) {\n      config.devtool = false\n    } else if (isWindows) {\n      // Non-eval based source maps are slow to rebuild, so we only enable\n      // them for Windows. Unfortunately, eval source maps are flagged as\n      // suspicious by Windows Defender and block HMR.\n      config.devtool = 'inline-source-map'\n    } else {\n      // `eval-source-map` provides full-fidelity source maps for the\n      // original source, including columns and original variable names.\n      // This is desirable so the in-browser debugger can correctly pause\n      // and show scoped variables with their original names.\n      config.devtool = 'eval-source-map'\n    }\n  } else {\n    // Enable browser sourcemaps:\n    if (ctx.productionBrowserSourceMaps && ctx.isClient) {\n      config.devtool = 'source-map'\n    } else {\n      config.devtool = false\n    }\n  }\n\n  if (!config.module) {\n    config.module = { rules: [] }\n  }\n\n  // TODO: add codemod for \"Should not import the named export\" with JSON files\n  config.module.strictExportPresence = !isWebpack5\n\n  return config\n})\n"],"names":[],"mappings":";;;;;AAAyB,GAA2B,CAA3B,MAA2B;AAClC,GAAiC,CAAjC,YAAiC;AACf,GAAoC,CAApC,QAAoC;;;;;;AAGxE,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,MAAK,KAAO,KALrB,MAA2B;AAO7C,KAAK,CAAC,IAAI,OANC,YAAiC,mBAMhB,KAAI,CACrC,GAAyB,EACzB,MAA6B,EAC7B,CAAC;IACD,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,aAAa,IAAG,WAAa,KAAG,UAAY;IAC9D,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,QAAQ,IAAG,MAAQ,KAAG,MAAQ;IAChD,EAAE,EAXgC,QAAoC,aAWtD,CAAC;QACf,EAAoC,AAApC,kCAAoC;QACpC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,IAAG,SAAW;aAAI,GAAK;aAAE,GAAK;;IAC5D,CAAC,MAAM,CAAC;QACN,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,IAAG,IAAM,KAAG,GAAK;IAC/C,CAAC;IAED,EAA6E,AAA7E,2EAA6E;IAC7E,EAAyE,AAAzE,uEAAyE;IACzE,EAA+C,AAA/C,6CAA+C;IAC/C,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY;IAE9B,EAA4D,AAA5D,0DAA4D;IAC5D,EAAE,EAAE,GAAG,CAAC,aAAa,EAAE,CAAC;QACtB,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB,KAAK,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,CAAC;YAC1E,MAAM,CAAC,OAAO,GAAG,KAAK;QACxB,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,CAAC;YACrB,EAAoE,AAApE,kEAAoE;YACpE,EAAmE,AAAnE,iEAAmE;YACnE,EAAgD,AAAhD,8CAAgD;YAChD,MAAM,CAAC,OAAO,IAAG,iBAAmB;QACtC,CAAC,MAAM,CAAC;YACN,EAA+D,AAA/D,6DAA+D;YAC/D,EAAkE,AAAlE,gEAAkE;YAClE,EAAmE,AAAnE,iEAAmE;YACnE,EAAuD,AAAvD,qDAAuD;YACvD,MAAM,CAAC,OAAO,IAAG,eAAiB;QACpC,CAAC;IACH,CAAC,MAAM,CAAC;QACN,EAA6B,AAA7B,2BAA6B;QAC7B,EAAE,EAAE,GAAG,CAAC,2BAA2B,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC;YACpD,MAAM,CAAC,OAAO,IAAG,UAAY;QAC/B,CAAC,MAAM,CAAC;YACN,MAAM,CAAC,OAAO,GAAG,KAAK;QACxB,CAAC;IACH,CAAC;IAED,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QACnB,MAAM,CAAC,MAAM;YAAK,KAAK;;IACzB,CAAC;IAED,EAA6E,AAA7E,2EAA6E;IAC7E,MAAM,CAAC,MAAM,CAAC,oBAAoB,IArDA,QAAoC;WAuD/D,MAAM;AACf,CAAC;QAnDY,IAAI,GAAJ,IAAI"}