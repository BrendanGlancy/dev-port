{"version":3,"sources":["../../../../../../build/webpack/config/blocks/css/index.ts"],"sourcesContent":["import curry from 'next/dist/compiled/lodash.curry'\nimport { webpack, isWebpack5 } from 'next/dist/compiled/webpack/webpack'\nimport MiniCssExtractPlugin from '../../../plugins/mini-css-extract-plugin'\nimport { loader, plugin } from '../../helpers'\nimport { ConfigurationContext, ConfigurationFn, pipe } from '../../utils'\nimport { getCssModuleLoader, getGlobalCssLoader } from './loaders'\nimport {\n  getCustomDocumentError,\n  getGlobalImportError,\n  getGlobalModuleImportError,\n  getLocalModuleImportError,\n} from './messages'\nimport { getPostCssPlugins } from './plugins'\n\n// RegExps for all Style Sheet variants\nexport const regexLikeCss = /\\.(css|scss|sass)(\\.webpack\\[javascript\\/auto\\])?$/\n\n// RegExps for Style Sheets\nconst regexCssGlobal = /(?<!\\.module)\\.css$/\nconst regexCssModules = /\\.module\\.css$/\n\n// RegExps for Syntactically Awesome Style Sheets\nconst regexSassGlobal = /(?<!\\.module)\\.(scss|sass)$/\nconst regexSassModules = /\\.module\\.(scss|sass)$/\n\nexport const css = curry(async function css(\n  ctx: ConfigurationContext,\n  config: webpack.Configuration\n) {\n  const {\n    prependData: sassPrependData,\n    additionalData: sassAdditionalData,\n    ...sassOptions\n  } = ctx.sassOptions\n\n  const sassPreprocessors: webpack.RuleSetUseItem[] = [\n    // First, process files with `sass-loader`: this inlines content, and\n    // compiles away the proprietary syntax.\n    {\n      loader: require.resolve('next/dist/compiled/sass-loader'),\n      options: {\n        // Source maps are required so that `resolve-url-loader` can locate\n        // files original to their source directory.\n        sourceMap: true,\n        sassOptions,\n        additionalData: sassPrependData || sassAdditionalData,\n      },\n    },\n    // Then, `sass-loader` will have passed-through CSS imports as-is instead\n    // of inlining them. Because they were inlined, the paths are no longer\n    // correct.\n    // To fix this, we use `resolve-url-loader` to rewrite the CSS\n    // imports to real file paths.\n    {\n      loader: require.resolve('next/dist/compiled/resolve-url-loader'),\n      options: {\n        // Source maps are not required here, but we may as well emit\n        // them.\n        sourceMap: true,\n      },\n    },\n  ]\n\n  const fns: ConfigurationFn[] = [\n    loader({\n      oneOf: [\n        {\n          // Impossible regex expression\n          test: /a^/,\n          loader: 'noop-loader',\n          options: { __next_css_remove: true },\n        },\n      ],\n    }),\n  ]\n\n  const postCssPlugins = await getPostCssPlugins(\n    ctx.rootDirectory,\n    ctx.isProduction,\n    !ctx.future.strictPostcssConfiguration\n  )\n\n  // CSS cannot be imported in _document. This comes before everything because\n  // global CSS nor CSS modules work in said file.\n  fns.push(\n    loader({\n      oneOf: [\n        {\n          test: regexLikeCss,\n          // Use a loose regex so we don't have to crawl the file system to\n          // find the real file name (if present).\n          issuer: /pages[\\\\/]_document\\./,\n          use: {\n            loader: 'error-loader',\n            options: {\n              reason: getCustomDocumentError(),\n            },\n          },\n        },\n      ],\n    })\n  )\n\n  // CSS Modules support must be enabled on the server and client so the class\n  // names are available for SSR or Prerendering.\n  fns.push(\n    loader({\n      oneOf: [\n        {\n          // CSS Modules should never have side effects. This setting will\n          // allow unused CSS to be removed from the production build.\n          // We ensure this by disallowing `:global()` CSS at the top-level\n          // via the `pure` mode in `css-loader`.\n          sideEffects: false,\n          // CSS Modules are activated via this specific extension.\n          test: regexCssModules,\n          // CSS Modules are only supported in the user's application. We're\n          // not yet allowing CSS imports _within_ `node_modules`.\n          issuer: {\n            and: [ctx.rootDirectory],\n            not: [/node_modules/],\n          },\n          use: getCssModuleLoader(ctx, postCssPlugins),\n        },\n      ],\n    })\n  )\n  fns.push(\n    loader({\n      oneOf: [\n        // Opt-in support for Sass (using .scss or .sass extensions).\n        {\n          // Sass Modules should never have side effects. This setting will\n          // allow unused Sass to be removed from the production build.\n          // We ensure this by disallowing `:global()` Sass at the top-level\n          // via the `pure` mode in `css-loader`.\n          sideEffects: false,\n          // Sass Modules are activated via this specific extension.\n          test: regexSassModules,\n          // Sass Modules are only supported in the user's application. We're\n          // not yet allowing Sass imports _within_ `node_modules`.\n          issuer: {\n            and: [ctx.rootDirectory],\n            not: [/node_modules/],\n          },\n          use: getCssModuleLoader(ctx, postCssPlugins, sassPreprocessors),\n        },\n      ],\n    })\n  )\n\n  // Throw an error for CSS Modules used outside their supported scope\n  fns.push(\n    loader({\n      oneOf: [\n        {\n          test: [regexCssModules, regexSassModules],\n          use: {\n            loader: 'error-loader',\n            options: {\n              reason: getLocalModuleImportError(),\n            },\n          },\n        },\n      ],\n    })\n  )\n\n  if (ctx.isServer) {\n    fns.push(\n      loader({\n        oneOf: [\n          {\n            test: [regexCssGlobal, regexSassGlobal],\n            use: require.resolve('next/dist/compiled/ignore-loader'),\n          },\n        ],\n      })\n    )\n  } else {\n    fns.push(\n      loader({\n        oneOf: [\n          {\n            // A global CSS import always has side effects. Webpack will tree\n            // shake the CSS without this option if the issuer claims to have\n            // no side-effects.\n            // See https://github.com/webpack/webpack/issues/6571\n            sideEffects: true,\n            test: regexCssGlobal,\n            // We only allow Global CSS to be imported anywhere in the\n            // application if it comes from node_modules. This is a best-effort\n            // heuristic that makes a safety trade-off for better\n            // interoperability with npm packages that require CSS. Without\n            // this ability, the component's CSS would have to be included for\n            // the entire app instead of specific page where it's required.\n            include: { and: [/node_modules/] },\n            // Global CSS is only supported in the user's application, not in\n            // node_modules.\n            issuer: ctx.isCraCompat\n              ? undefined\n              : {\n                  and: [ctx.rootDirectory],\n                  not: [/node_modules/],\n                },\n            use: getGlobalCssLoader(ctx, postCssPlugins),\n          },\n        ],\n      })\n    )\n\n    if (ctx.customAppFile) {\n      fns.push(\n        loader({\n          oneOf: [\n            {\n              // A global CSS import always has side effects. Webpack will tree\n              // shake the CSS without this option if the issuer claims to have\n              // no side-effects.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n              test: regexCssGlobal,\n              issuer: { and: [ctx.customAppFile] },\n              use: getGlobalCssLoader(ctx, postCssPlugins),\n            },\n          ],\n        })\n      )\n      fns.push(\n        loader({\n          oneOf: [\n            {\n              // A global Sass import always has side effects. Webpack will tree\n              // shake the Sass without this option if the issuer claims to have\n              // no side-effects.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n              test: regexSassGlobal,\n              issuer: { and: [ctx.customAppFile] },\n              use: getGlobalCssLoader(ctx, postCssPlugins, sassPreprocessors),\n            },\n          ],\n        })\n      )\n    }\n  }\n\n  // Throw an error for Global CSS used inside of `node_modules`\n  if (!ctx.isCraCompat) {\n    fns.push(\n      loader({\n        oneOf: [\n          {\n            test: [regexCssGlobal, regexSassGlobal],\n            issuer: { and: [/node_modules/] },\n            use: {\n              loader: 'error-loader',\n              options: {\n                reason: getGlobalModuleImportError(),\n              },\n            },\n          },\n        ],\n      })\n    )\n  }\n\n  // Throw an error for Global CSS used outside of our custom <App> file\n  fns.push(\n    loader({\n      oneOf: [\n        {\n          test: [regexCssGlobal, regexSassGlobal],\n          use: {\n            loader: 'error-loader',\n            options: {\n              reason: getGlobalImportError(),\n            },\n          },\n        },\n      ],\n    })\n  )\n\n  if (ctx.isClient) {\n    // Automatically transform references to files (i.e. url()) into URLs\n    // e.g. url(./logo.svg)\n    fns.push(\n      loader({\n        oneOf: [\n          {\n            // This should only be applied to CSS files\n            issuer: regexLikeCss,\n            // Exclude extensions that webpack handles by default\n            exclude: [\n              /\\.(js|mjs|jsx|ts|tsx)$/,\n              /\\.html$/,\n              /\\.json$/,\n              /\\.webpack\\[[^\\]]+\\]$/,\n            ],\n            use: {\n              // `file-loader` always emits a URL reference, where `url-loader`\n              // might inline the asset as a data URI\n              loader: require.resolve('next/dist/compiled/file-loader'),\n              options: {\n                // Hash the file for immutable cacheability\n                name: 'static/media/[name].[hash].[ext]',\n              },\n            },\n          },\n        ],\n      })\n    )\n  }\n\n  if (ctx.isClient && ctx.isProduction) {\n    // Extract CSS as CSS file(s) in the client-side production bundle.\n    fns.push(\n      plugin(\n        // @ts-ignore webpack 5 compat\n        new MiniCssExtractPlugin({\n          experimentalUseImportModule: isWebpack5,\n          filename: 'static/css/[contenthash].css',\n          chunkFilename: 'static/css/[contenthash].css',\n          // Next.js guarantees that CSS order \"doesn't matter\", due to imposed\n          // restrictions:\n          // 1. Global CSS can only be defined in a single entrypoint (_app)\n          // 2. CSS Modules generate scoped class names by default and cannot\n          //    include Global CSS (:global() selector).\n          //\n          // While not a perfect guarantee (e.g. liberal use of `:global()`\n          // selector), this assumption is required to code-split CSS.\n          //\n          // If this warning were to trigger, it'd be unactionable by the user,\n          // but likely not valid -- so we disable it.\n          ignoreOrder: true,\n        })\n      )\n    )\n  }\n\n  const fn = pipe(...fns)\n  return fn(config)\n})\n"],"names":[],"mappings":"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"}