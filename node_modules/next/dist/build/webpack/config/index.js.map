{"version":3,"sources":["../../../../build/webpack/config/index.ts"],"sourcesContent":["import { webpack } from 'next/dist/compiled/webpack/webpack'\nimport { NextConfigComplete } from '../../../server/config-shared'\nimport { base } from './blocks/base'\nimport { css } from './blocks/css'\nimport { ConfigurationContext, pipe } from './utils'\n\nexport async function build(\n  config: webpack.Configuration,\n  {\n    rootDirectory,\n    customAppFile,\n    isDevelopment,\n    isServer,\n    assetPrefix,\n    sassOptions,\n    productionBrowserSourceMaps,\n    future,\n    isCraCompat,\n  }: {\n    rootDirectory: string\n    customAppFile: RegExp\n    isDevelopment: boolean\n    isServer: boolean\n    assetPrefix: string\n    sassOptions: any\n    productionBrowserSourceMaps: boolean\n    future: NextConfigComplete['future']\n    isCraCompat?: boolean\n  }\n): Promise<webpack.Configuration> {\n  const ctx: ConfigurationContext = {\n    rootDirectory,\n    customAppFile,\n    isDevelopment,\n    isProduction: !isDevelopment,\n    isServer,\n    isClient: !isServer,\n    assetPrefix: assetPrefix\n      ? assetPrefix.endsWith('/')\n        ? assetPrefix.slice(0, -1)\n        : assetPrefix\n      : '',\n    sassOptions,\n    productionBrowserSourceMaps,\n    future,\n    isCraCompat,\n  }\n\n  const fn = pipe(base(ctx), css(ctx))\n  return fn(config)\n}\n"],"names":[],"mappings":";;;;QAMsB,KAAK,GAAL,KAAK;AAJN,GAAe,CAAf,KAAe;AAChB,GAAc,CAAd,IAAc;AACS,GAAS,CAAT,MAAS;eAE9B,KAAK,CACzB,MAA6B,IAE3B,aAAa,GACb,aAAa,GACb,aAAa,GACb,QAAQ,GACR,WAAW,GACX,WAAW,GACX,2BAA2B,GAC3B,MAAM,GACN,WAAW,KAYmB,CAAC;IACjC,KAAK,CAAC,GAAG;QACP,aAAa;QACb,aAAa;QACb,aAAa;QACb,YAAY,GAAG,aAAa;QAC5B,QAAQ;QACR,QAAQ,GAAG,QAAQ;QACnB,WAAW,EAAE,WAAW,GACpB,WAAW,CAAC,QAAQ,EAAC,CAAG,KACtB,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IACvB,WAAW;QAEjB,WAAW;QACX,2BAA2B;QAC3B,MAAM;QACN,WAAW;;IAGb,KAAK,CAAC,EAAE,OA5CiC,MAAS,WAF/B,KAAe,OA8Cb,GAAG,OA7CN,IAAc,MA6CD,GAAG;WAC3B,EAAE,CAAC,MAAM;AAClB,CAAC"}