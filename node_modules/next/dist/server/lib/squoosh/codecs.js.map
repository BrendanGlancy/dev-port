{"version":3,"sources":["../../../../server/lib/squoosh/codecs.ts"],"sourcesContent":["import { promises as fsp } from 'fs'\nimport * as path from 'path'\nimport { instantiateEmscriptenWasm, pathify } from './emscripten-utils.js'\n\n// MozJPEG\n// @ts-ignore\nimport mozEnc from './mozjpeg/mozjpeg_node_enc.js'\nconst mozEncWasm = path.resolve(__dirname, './mozjpeg/mozjpeg_node_enc.wasm')\n// @ts-ignore\nimport mozDec from './mozjpeg/mozjpeg_node_dec.js'\nconst mozDecWasm = path.resolve(__dirname, './mozjpeg/mozjpeg_node_dec.wasm')\n\n// WebP\n// @ts-ignore\nimport webpEnc from './webp/webp_node_enc.js'\nconst webpEncWasm = path.resolve(__dirname, './webp/webp_node_enc.wasm')\n// @ts-ignore\nimport webpDec from './webp/webp_node_dec.js'\nconst webpDecWasm = path.resolve(__dirname, './webp/webp_node_dec.wasm')\n\n// PNG\n// @ts-ignore\nimport * as pngEncDec from './png/squoosh_png.js'\nconst pngEncDecWasm = path.resolve(__dirname, './png/squoosh_png_bg.wasm')\nconst pngEncDecInit = () =>\n  pngEncDec.default(fsp.readFile(pathify(pngEncDecWasm)))\n\n// OxiPNG\n// @ts-ignore\nimport * as oxipng from './png/squoosh_oxipng.js'\nconst oxipngWasm = path.resolve(__dirname, './png/squoosh_oxipng_bg.wasm')\nconst oxipngInit = () => oxipng.default(fsp.readFile(pathify(oxipngWasm)))\n\n// Resize\n// @ts-ignore\nimport * as resize from './resize/squoosh_resize.js'\nconst resizeWasm = path.resolve(__dirname, './resize/squoosh_resize_bg.wasm')\nconst resizeInit = () => resize.default(fsp.readFile(pathify(resizeWasm)))\n\n// rotate\nconst rotateWasm = path.resolve(__dirname, './rotate/rotate.wasm')\n\nimport ImageData from './image_data.js'\n;(global as any).ImageData = ImageData // mandatory for wasm binaries\n\nfunction resizeNameToIndex(\n  name: 'triangle' | 'catrom' | 'mitchell' | 'lanczos3'\n) {\n  switch (name) {\n    case 'triangle':\n      return 0\n    case 'catrom':\n      return 1\n    case 'mitchell':\n      return 2\n    case 'lanczos3':\n      return 3\n    default:\n      throw Error(`Unknown resize algorithm \"${name}\"`)\n  }\n}\n\nfunction resizeWithAspect({\n  input_width,\n  input_height,\n  target_width,\n  target_height,\n}: {\n  input_width: number\n  input_height: number\n  target_width?: number\n  target_height?: number\n}): { width: number; height: number } {\n  if (!target_width && !target_height) {\n    throw Error('Need to specify at least width or height when resizing')\n  }\n  if (target_width && target_height) {\n    return { width: target_width, height: target_height }\n  }\n  if (!target_width) {\n    return {\n      width: Math.round((input_width / input_height) * target_height!),\n      height: target_height!,\n    }\n  }\n  if (!target_height) {\n    return {\n      width: target_width,\n      height: Math.round((input_height / input_width) * target_width),\n    }\n  }\n  throw Error('invariant')\n}\n\nexport const preprocessors = {\n  resize: {\n    name: 'Resize',\n    description: 'Resize the image before compressing',\n    instantiate: async () => {\n      await resizeInit()\n      return (\n        buffer: Buffer | Uint8Array,\n        input_width: number,\n        input_height: number,\n        {\n          width,\n          height,\n          method,\n          premultiply,\n          linearRGB,\n        }: {\n          width?: number\n          height?: number\n          method: 'triangle' | 'catrom' | 'mitchell' | 'lanczos3'\n          premultiply: boolean\n          linearRGB: boolean\n        }\n      ) => {\n        ;({ width, height } = resizeWithAspect({\n          input_width,\n          input_height,\n          target_width: width,\n          target_height: height,\n        }))\n        const imageData = new ImageData(\n          resize.resize(\n            buffer,\n            input_width,\n            input_height,\n            width,\n            height,\n            resizeNameToIndex(method),\n            premultiply,\n            linearRGB\n          ),\n          width,\n          height\n        )\n        resize.cleanup()\n        return imageData\n      }\n    },\n    defaultOptions: {\n      method: 'lanczos3',\n      fitMethod: 'stretch',\n      premultiply: true,\n      linearRGB: true,\n    },\n  },\n  rotate: {\n    name: 'Rotate',\n    description: 'Rotate image',\n    instantiate: async () => {\n      return async (\n        buffer: Buffer | Uint8Array,\n        width: number,\n        height: number,\n        { numRotations }: { numRotations: number }\n      ) => {\n        const degrees = (numRotations * 90) % 360\n        const sameDimensions = degrees === 0 || degrees === 180\n        const size = width * height * 4\n        const { instance } = await WebAssembly.instantiate(\n          await fsp.readFile(pathify(rotateWasm))\n        )\n        const exports = instance.exports as any\n        const { memory } = exports\n        const additionalPagesNeeded = Math.ceil(\n          (size * 2 - memory.buffer.byteLength + 8) / (64 * 1024)\n        )\n        if (additionalPagesNeeded > 0) {\n          memory.grow(additionalPagesNeeded)\n        }\n        const view = new Uint8ClampedArray(memory.buffer)\n        view.set(buffer, 8)\n        exports.rotate(width, height, degrees)\n        return new ImageData(\n          Buffer.from(view.slice(size + 8, size * 2 + 8)),\n          sameDimensions ? width : height,\n          sameDimensions ? height : width\n        )\n      }\n    },\n    defaultOptions: {\n      numRotations: 0,\n    },\n  },\n} as const\n\nexport const codecs = {\n  mozjpeg: {\n    name: 'MozJPEG',\n    extension: 'jpg',\n    detectors: [/^\\xFF\\xD8\\xFF/],\n    dec: () => instantiateEmscriptenWasm(mozDec, mozDecWasm),\n    enc: () => instantiateEmscriptenWasm(mozEnc, mozEncWasm),\n    defaultEncoderOptions: {\n      quality: 75,\n      baseline: false,\n      arithmetic: false,\n      progressive: true,\n      optimize_coding: true,\n      smoothing: 0,\n      color_space: 3 /*YCbCr*/,\n      quant_table: 3,\n      trellis_multipass: false,\n      trellis_opt_zero: false,\n      trellis_opt_table: false,\n      trellis_loops: 1,\n      auto_subsample: true,\n      chroma_subsample: 2,\n      separate_chroma_quality: false,\n      chroma_quality: 75,\n    },\n    autoOptimize: {\n      option: 'quality',\n      min: 0,\n      max: 100,\n    },\n  },\n  webp: {\n    name: 'WebP',\n    extension: 'webp',\n    detectors: [/^RIFF....WEBPVP8[LX ]/],\n    dec: () => instantiateEmscriptenWasm(webpDec, webpDecWasm),\n    enc: () => instantiateEmscriptenWasm(webpEnc, webpEncWasm),\n    defaultEncoderOptions: {\n      quality: 75,\n      target_size: 0,\n      target_PSNR: 0,\n      method: 4,\n      sns_strength: 50,\n      filter_strength: 60,\n      filter_sharpness: 0,\n      filter_type: 1,\n      partitions: 0,\n      segments: 4,\n      pass: 1,\n      show_compressed: 0,\n      preprocessing: 0,\n      autofilter: 0,\n      partition_limit: 0,\n      alpha_compression: 1,\n      alpha_filtering: 1,\n      alpha_quality: 100,\n      lossless: 0,\n      exact: 0,\n      image_hint: 0,\n      emulate_jpeg_size: 0,\n      thread_level: 0,\n      low_memory: 0,\n      near_lossless: 100,\n      use_delta_palette: 0,\n      use_sharp_yuv: 0,\n    },\n    autoOptimize: {\n      option: 'quality',\n      min: 0,\n      max: 100,\n    },\n  },\n  oxipng: {\n    name: 'OxiPNG',\n    extension: 'png',\n    // eslint-disable-next-line no-control-regex\n    detectors: [/^\\x89PNG\\x0D\\x0A\\x1A\\x0A/],\n    dec: async () => {\n      await pngEncDecInit()\n      return {\n        decode: (buffer: Buffer | Uint8Array): Buffer => {\n          const imageData = pngEncDec.decode(buffer)\n          pngEncDec.cleanup()\n          return imageData\n        },\n      } as any\n    },\n    enc: async () => {\n      await pngEncDecInit()\n      await oxipngInit()\n      return {\n        encode: (\n          buffer: Buffer | Uint8Array,\n          width: number,\n          height: number,\n          opts: any\n        ) => {\n          const simplePng = pngEncDec.encode(\n            new Uint8Array(buffer),\n            width,\n            height\n          )\n          const imageData = oxipng.optimise(simplePng, opts.level)\n          oxipng.cleanup()\n          return imageData\n        },\n      }\n    },\n    defaultEncoderOptions: {\n      level: 2,\n    },\n    autoOptimize: {\n      option: 'level',\n      min: 6,\n      max: 1,\n    },\n  },\n} as const\n"],"names":[],"mappings":"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"}