{"version":3,"sources":["../../server/config-utils.ts"],"sourcesContent":["import path from 'path'\nimport { Worker } from 'jest-worker'\nimport * as Log from '../build/output/log'\nimport { CheckReasons, CheckResult } from './config-utils-worker'\nimport { install, shouldLoadWithWebpack5 } from './config-utils-worker'\nimport { PHASE_PRODUCTION_SERVER } from '../shared/lib/constants'\nimport { getNodeOptionsWithoutInspect } from './lib/utils'\n\nexport { install, shouldLoadWithWebpack5 }\n\nfunction reasonMessage(reason: CheckReasons) {\n  switch (reason) {\n    case 'default':\n      return 'Enabled by default'\n    case 'flag-disabled':\n      return 'webpack5 flag is set to false in next.config.js'\n    case 'test-mode':\n      return 'internal test mode'\n    default:\n      return ''\n  }\n}\n\nexport async function loadWebpackHook(phase: string, dir: string) {\n  let useWebpack5 = true\n  let usesRemovedFlag = false\n  const worker = new Worker(\n    path.resolve(__dirname, './config-utils-worker.js'),\n    {\n      enableWorkerThreads: false,\n      numWorkers: 1,\n      forkOptions: {\n        env: {\n          ...process.env,\n          NODE_OPTIONS: getNodeOptionsWithoutInspect(),\n        },\n      },\n    }\n  ) as Worker & {\n    shouldLoadWithWebpack5: typeof import('./config-utils-worker').shouldLoadWithWebpack5\n  }\n  try {\n    const result: CheckResult = await worker.shouldLoadWithWebpack5(phase, dir)\n    if (result.reason === 'future-flag') {\n      usesRemovedFlag = true\n    } else {\n      if (phase !== PHASE_PRODUCTION_SERVER) {\n        Log.info(\n          `Using webpack ${result.enabled ? '5' : '4'}. Reason: ${reasonMessage(\n            result.reason\n          )} https://nextjs.org/docs/messages/webpack5`\n        )\n      }\n    }\n\n    useWebpack5 = Boolean(result.enabled)\n  } catch {\n    // If this errors, it likely will do so again upon boot, so we just swallow\n    // it here.\n  } finally {\n    worker.end()\n  }\n\n  if (usesRemovedFlag) {\n    throw new Error(\n      '`future.webpack5` in `next.config.js` has moved to the top level `webpack5` flag https://nextjs.org/docs/messages/future-webpack5-moved-to-webpack5'\n    )\n  }\n\n  install(useWebpack5)\n}\n"],"names":[],"mappings":";;;;gCAQS,OAAO;;;eAJgC,kBAAuB;;;gCAIrD,sBAAsB;;;eAJQ,kBAAuB;;;QAmBjD,eAAe,GAAf,eAAe;AAvBpB,GAAM,CAAN,KAAM;AACA,GAAa,CAAb,WAAa;AACxB,GAAG,CAAH,GAAG;AAEiC,GAAuB,CAAvB,kBAAuB;AAC/B,GAAyB,CAAzB,UAAyB;AACpB,GAAa,CAAb,MAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAIjD,aAAa,CAAC,MAAoB,EAAE,CAAC;WACpC,MAAM;cACP,OAAS;oBACL,kBAAoB;cACxB,aAAe;oBACX,+CAAiD;cACrD,SAAW;oBACP,kBAAoB;;;;AAIjC,CAAC;eAEqB,eAAe,CAAC,KAAa,EAAE,GAAW,EAAE,CAAC;IACjE,GAAG,CAAC,WAAW,GAAG,IAAI;IACtB,GAAG,CAAC,eAAe,GAAG,KAAK;IAC3B,KAAK,CAAC,MAAM,GAAG,GAAG,CAzBG,WAAa,QADnB,KAAM,SA2Bd,OAAO,CAAC,SAAS,GAAE,wBAA0B;QAEhD,mBAAmB,EAAE,KAAK;QAC1B,UAAU,EAAE,CAAC;QACb,WAAW;YACT,GAAG;mBACE,OAAO,CAAC,GAAG;gBACd,YAAY,MA5BuB,MAAa;;;;QAmCpD,CAAC;QACH,KAAK,CAAC,MAAM,SAAsB,MAAM,CAAC,sBAAsB,CAAC,KAAK,EAAE,GAAG;QAC1E,EAAE,EAAE,MAAM,CAAC,MAAM,MAAK,WAAa,GAAE,CAAC;YACpC,eAAe,GAAG,IAAI;QACxB,CAAC,MAAM,CAAC;YACN,EAAE,EAAE,KAAK,KAzCyB,UAAyB,0BAyCpB,CAAC;gBA5ClC,GAAG,CA6CH,IAAI,EACL,cAAc,EAAE,MAAM,CAAC,OAAO,IAAG,CAAG,KAAG,CAAG,EAAC,UAAU,EAAE,aAAa,CACnE,MAAM,CAAC,MAAM,EACb,0CAA0C;YAEhD,CAAC;QACH,CAAC;QAED,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO;IACtC,CAAC,QAAO,CAAC;IACP,EAA2E,AAA3E,yEAA2E;IAC3E,EAAW,AAAX,SAAW;IACb,CAAC,QAAS,CAAC;QACT,MAAM,CAAC,GAAG;IACZ,CAAC;IAED,EAAE,EAAE,eAAe,EAAE,CAAC;QACpB,KAAK,CAAC,GAAG,CAAC,KAAK,EACb,mJAAqJ;IAEzJ,CAAC;QA/D6C,kBAAuB,UAiE7D,WAAW;AACrB,CAAC"}